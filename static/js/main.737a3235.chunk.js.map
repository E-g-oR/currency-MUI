{"version":3,"sources":["components/bottomNavigation/BottomNavigation.jsx","features/currencies/currenciesSlice.js","components/lineChart/LineChart.jsx","components/currency/Currency.jsx","components/currencyList/currencyList.jsx","components/topBar/TopBar.jsx","App.js","app/store.js","index.js"],"names":["BottomNavigationComponent","useState","value","setValue","Box","sx","position","bottom","left","width","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","Icon","currenciesSlice","createSlice","name","initialState","data","reducers","setData","state","action","push","payload","setStatistics","map","currency","Cur_ID","Cur_Statistics","actions","LineChart","labels","datasets","backgroundColor","borderColor","borderWidth","ExpandChart","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Currency","currObj","startDate","endDate","dispatch","useDispatch","expanded","setExpanded","day","Date","slice","Cur_OfficialRate","useEffect","fetch","then","responseStat","json","dataStat","Grid","item","Card","CardHeader","avatar","Avatar","Cur_Abbreviation","title","Cur_Name","subheader","onClick","ExpandMore","Collapse","in","timeout","unmountOnExit","CardMedia","currIDList","CurrencyList","dates","setDates","useSelector","currencies","spread","today","firstStatDay","setDate","getDate","toJSON","getDates","a","responseCur","dataCur","container","spacing","direction","padding","TopBar","AppBar","Toolbar","size","edge","color","mr","Menu","Typography","variant","component","flexGrow","App","prefersDarkMode","useMediaQuery","React","useMemo","createTheme","palette","mode","ThemeProvider","CssBaseline","Container","maxWidth","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.737a3235.chunk.js","sourcesContent":["import { BottomNavigation, BottomNavigationAction, Icon } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { useState } from \"react\"\r\n\r\n\r\nexport const BottomNavigationComponent = () => {\r\n    const [value, setValue] = useState('rates')\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n    return (\r\n        <Box sx={{ position: \"fixed\", bottom: 0, left: 0, width: \"100%\" }}>\r\n            <BottomNavigation value={value} onChange={handleChange} >\r\n                <BottomNavigationAction\r\n                    label=\"Rates\"\r\n                    value=\"rates\"\r\n                    icon={<Icon>trending_up</Icon>}\r\n                />\r\n                <BottomNavigationAction\r\n                    label=\"Savings\"\r\n                    value=\"savings\"\r\n                    icon={<Icon>savings</Icon>}\r\n                />\r\n                <BottomNavigationAction\r\n                    label=\"Converter\"\r\n                    value=\"converter\"\r\n                    icon={<Icon>loop</Icon>}\r\n                />\r\n            </BottomNavigation>\r\n        </Box>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const currenciesSlice = createSlice({\r\n    name: 'currencies',\r\n    initialState: {\r\n        data: []\r\n    },\r\n    reducers: {\r\n        setData: (state, action) => {\r\n            state.data.push(action.payload)\r\n        },\r\n        setStatistics: (state, action) => {\r\n            // state.data.map(currency => {\r\n            //     if (currency.Cur_ID === action.payload[0].Cur_ID) {\r\n            //         currency.Cur_Statistics = action.payload\r\n            //     }\r\n            // })\r\n\r\n            state.data.map(currency => (currency.Cur_ID === action.payload[0].Cur_ID) ? currency.Cur_Statistics = action.payload : false\r\n            )\r\n\r\n\r\n            // console.log(state);\r\n\r\n            // const index = state.data.findIndex(item => item.Cur_ID === action.payload.Cur_ID)\r\n            // state.data[index].Cur_Statistics = action.payload\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setData, setStatistics } = currenciesSlice.actions\r\n\r\nexport default currenciesSlice.reducer","import { Line } from 'react-chartjs-2'\r\n\r\nexport const LineChart = ({ labels, data, label }) => {\r\n    return (<>\r\n        <Line\r\n            data={{\r\n                labels: labels,\r\n                datasets: [{\r\n                    label: label,\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'inherit',\r\n                    ],\r\n                    borderColor: [\r\n                        'inherit',\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n            }}\r\n        />\r\n    </>)\r\n}","import { ExpandMore } from \"@material-ui/icons\"\r\nimport { Avatar, Card, CardHeader, CardMedia, Collapse, Grid, IconButton } from \"@mui/material\"\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStatistics } from \"../../features/currencies/currenciesSlice\";\r\nimport { LineChart } from \"../lineChart/LineChart\";\r\n\r\n\r\nconst ExpandChart = styled((props) => {\r\n    const { expand, ...other } = props\r\n    return <IconButton {...other} />\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}))\r\n\r\nexport const Currency = ({ currObj, startDate, endDate }) => {\r\n    const dispatch = useDispatch()\r\n    const [expanded, setExpanded] = useState(false)\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded)\r\n    }\r\n    const labels = []\r\n    const data = []\r\n    if (currObj.Cur_Statistics) {\r\n        currObj.Cur_Statistics.map(day => {\r\n            labels.push(day.Date.slice(5, 10))\r\n            data.push(day.Cur_OfficialRate)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        fetch(`https://www.nbrb.by/API/ExRates/Rates/Dynamics/${currObj.Cur_ID}?startDate=${startDate}&endDate=${endDate}`)\r\n            .then(responseStat => responseStat.json())\r\n            .then(dataStat => dispatch(setStatistics(dataStat)))\r\n\r\n    }, [currObj.Cur_ID, currObj.Cur_Statistics, startDate, endDate, dispatch])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid item>\r\n                <Card>\r\n                    <CardHeader avatar={\r\n                        <Avatar>{currObj.Cur_Abbreviation}</Avatar>\r\n                    }\r\n                        title={`Валюта: ${currObj.Cur_Name}`}\r\n                        subheader={`Текущий курс: ${currObj.Cur_OfficialRate}`}\r\n                        action={\r\n                            <ExpandChart\r\n                                expand={expanded}\r\n                                onClick={handleExpandClick}\r\n                                aria-expanded={expanded}\r\n                                aria-label=\"show more\"\r\n                            >\r\n                                <ExpandMore />\r\n                            </ExpandChart>\r\n                        }\r\n                    />\r\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                        <CardMedia>\r\n                            <LineChart\r\n                                labels={labels}\r\n                                data={data}\r\n                                label={currObj.Cur_Abbreviation} />\r\n                        </CardMedia>\r\n                    </Collapse>\r\n                </Card>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}","import { Grid } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { setData } from '../../features/currencies/currenciesSlice';\r\nimport { Currency } from '../currency/Currency';\r\n\r\nconst currIDList = [\r\n    451,      //? Евро\r\n    431,      //? Доллар США\r\n    456,      //? Российский рубль\r\n    // 468,      //? Тайский бат\r\n    460,      //? Турецкая лира\r\n    426,      //? Швейцарский франк\r\n    429,      //? Фунт стерлингов\r\n    449,      //? Гривна\r\n    // 'https://blockchain.info/ticker',                 //? Bitcoin\r\n];\r\n\r\nexport const CurrencyList = () => {\r\n    const [dates, setDates] = useState([])\r\n    const data = useSelector(state => state.currencies.data)\r\n    const dispatch = useDispatch()\r\n\r\n    const getDates = (spread) => {\r\n        const today = new Date()\r\n        const firstStatDay = new Date()\r\n        firstStatDay.setDate(today.getDate() - spread)\r\n        return [`${firstStatDay.toJSON().slice(0, 10)}`, `${today.toJSON().slice(0, 10)}`]\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDates(getDates(35))\r\n        currIDList.map(async (Cur_ID) => {\r\n            fetch(`https://www.nbrb.by/api/exrates/rates/${Cur_ID}`)\r\n                .then(responseCur => responseCur.json())\r\n                .then(dataCur => dispatch(setData(dataCur)))\r\n\r\n        })\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} direction=\"column\" sx={{ padding: '5.5rem 0' }} >\r\n            {data.map(currency => <Currency\r\n                currObj={currency}\r\n                startDate={dates[0]}\r\n                endDate={dates[1]}\r\n                key={currency.Cur_ID}\r\n            />)}\r\n        </Grid>\r\n\r\n    )\r\n}\r\n","import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\"\r\nimport { Menu } from \"@material-ui/icons\"\r\n\r\nexport const TopBar = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBar>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"menu\"\r\n\t\t\t\t\t\tsx={{ mr: 2 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Menu />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n\t\t\t\t\t\tRates\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</>\r\n\t)\r\n}","import { Container } from '@mui/material';\r\nimport React from 'react';\r\nimport './App.css';\r\nimport { BottomNavigationComponent } from './components/bottomNavigation/BottomNavigation';\r\nimport { CurrencyList } from './components/currencyList/currencyList';\r\nimport { useMediaQuery } from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material';\r\nimport { CssBaseline } from '@mui/material';\r\nimport { TopBar } from './components/topBar/TopBar';\r\n\r\n\r\nfunction App() {\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode: prefersDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [prefersDarkMode],\r\n  );\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\">\r\n        <TopBar />\r\n        <CurrencyList />\r\n        <BottomNavigationComponent />\r\n      </Container>\r\n    </ThemeProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport currenciesSlice from '../features/currencies/currenciesSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        currencies: currenciesSlice\r\n    }\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}><App /></Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}