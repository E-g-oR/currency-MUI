{"version":3,"sources":["app/features/store/authStore/authStore.ts","app/features/store/formStore.ts","app/features/store/ratesStore/ratesStore.ts","app/features/store/savingsStore/savingsStore.ts","app/store.ts","app/features/store/index.ts","components/UI/appBar/AppBar.tsx","components/UI/bottomNavigation/BottomNavigation.jsx","components/Screens/ConverterScreen/converter/Converter.jsx","components/Screens/RatesScreen/lineChart/LineChart.jsx","components/Screens/RatesScreen/currency/Currency.tsx","components/Screens/RatesScreen/currencyList/currencyList.tsx","components/Screens/SavingsScreen/savings/NumberFormatCustom.tsx","components/Screens/SavingsScreen/savings/FormAddSavings.tsx","components/Screens/SavingsScreen/savings/Converted.tsx","components/Screens/SavingsScreen/savings/SavingsList.tsx","components/Screens/SavingsScreen/savings/Savings.tsx","components/Screens/Base/Base.tsx","components/Screens/LoginAndRegisterScreen/LoginForm.tsx","components/Screens/LoginAndRegisterScreen/RegisterForm.tsx","components/Screens/LoginAndRegisterScreen/LoginBase.tsx","app/features/auth/firebaseConfig.ts","App.tsx","index.js"],"names":["AuthStore","indexStore","auth","makeAutoObservable","this","RESULT","FormStore","mode","editingItem","isOpen","isOpenDeleteConfirm","result","savingsStore","removeSaving","cancelEditMode","saving","CURRENCY_ID_LIST","sendRequest","url","a","fetch","response","json","RatesStore","data","startDate","today","dates","spread","Date","firstStatDay","setDate","getDate","toJSON","slice","getDates","forEach","id","rate","putRate","getRateStatistics","Cur_ID","statAndChart","Cur_Statistics","Chart_Data","push","convertStatToChart","stat","chartData","labels","map","day","Cur_OfficialRate","savings","converted","date","error","checkForRates","length","getFromDB","value","Number","S","find","item","name","saveToDB","savingEdit","index","findIndex","splice","convertToBYN","localStorage","setItem","JSON","stringify","savingsAtDB","getItem","parse","save","addSaving","rates","elem","Cur_Abbreviation","scale","Cur_Scale","store","authStore","formStore","fetchData","TopBar","observer","history","useHistory","Box","sx","flexGrow","AppBar","Toolbar","IconButton","size","edge","color","mr","Menu","Typography","variant","component","Button","onClick","getAuth","signOut","BottomNavigationComponent","useState","setValue","position","bottom","left","width","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","Icon","NavLink","to","Converter","useEffect","document","title","LineChart","datasets","fill","backgroundColor","borderColor","borderWidth","ExpandChart","styled","props","expand","other","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Currency","expanded","setExpanded","Card","CardHeader","avatar","Avatar","Cur_Name","subheader","action","ExpandMore","Collapse","in","timeout","unmountOnExit","CardMedia","textAlign","CurrencyList","Currencies","initRatesStore","padding","Stack","direction","spacing","display","justifyContent","CircularProgress","NumberFormatCustom","React","forwardRef","ref","prefix","getInputRef","onValueChange","values","target","thousandSeparator","isNumericString","useAddSavingsDialog","RATES","isEditMode","formTitle","defaultValue","defaultName","onClose","ERROR_MSG","submitForm","editSaving","openDeleteConfirm","closeDeleteConfirm","DeleteConfirmDialog","deletingItem","Dialog","open","DialogContent","DialogActions","AddSavingsDialog","Name","setName","Value","ValueError","setValueError","NameError","setNameError","validateOnChange","e","DialogTitle","FormControl","TextField","helperText","margin","autoComplete","InputProps","inputComponent","InputLabel","Select","labelId","disabled","MenuItem","alignItems","Tooltip","DeleteOutlined","trim","type","Converted","convertedError","setconvertedError","toFixed","SavingsList","handleSavingEditClick","setEditMode","useSavingsList","flexWrap","paddingBottom","Chip","Savings","Fab","right","toggleForm","Add","Base","Container","maxWidth","path","LoginForm","goTo","handleLogin","signInWithEmailAndPassword","login","password","then","userCred","user","catch","code","message","useLoginForm","useForm","defaultValues","errors","reset","formState","handleSubmit","control","mt","mb","rules","required","minLength","render","field","maxLength","Link","cursor","RegisterForm","LoginBase","className","CardContent","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","initializeApp","onAuthStateChanged","prefersDarkMode","useMediaQuery","useMemo","createTheme","palette","ThemeProvider","CssBaseline","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d7e3abfa.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { Store } from \"..\";\n\ninterface IAuthFirebase {\n  accessToken: string;\n  auth: object;\n  displayName: string | null;\n  email: string;\n  photoURL: string | null;\n  uid: string;\n}\nexport class AuthStore {\n  indexStore;\n  auth: IAuthFirebase | null = null;\n\n  constructor(indexStore: Store) {\n    makeAutoObservable(this);\n    this.indexStore = indexStore;\n  }\n\n  setAuth(auth: IAuthFirebase | null) {\n    this.auth = auth;\n  }\n}\n","import { makeAutoObservable } from \"mobx\";\nimport { Store } from \".\";\nimport { ISaving } from \"./savingsStore/savingsStore\";\nconst ADD = \"ADD\";\nconst EDIT = \"EDIT\";\nconst MODE = [\"ADD\", \"EDIT\"];\nconst RESULT = [\"NO\", \"YES\"];\n\nexport class FormStore {\n  indexStore;\n  mode: typeof ADD | typeof EDIT = ADD;\n  editingItem: ISaving | null = null;\n  isOpen: boolean = false;\n  isOpenDeleteConfirm: boolean = false;\n\n  constructor(indexStore: Store) {\n    makeAutoObservable(this);\n    this.indexStore = indexStore;\n  }\n\n  toggleForm() {\n    this.isOpen = !this.isOpen;\n  }\n\n  openDeleteConfirm() {\n    this.isOpenDeleteConfirm = true;\n  }\n\n  closeDeleteConfirm(result: typeof RESULT[0] | typeof RESULT[1]) {\n    if ((result === RESULT[1]) && (this.editingItem)) {\n      this.indexStore.savingsStore.removeSaving(this.editingItem);\n    }\n    this.isOpenDeleteConfirm = false;\n    this.cancelEditMode();\n  }\n\n  setEditMode(saving: ISaving) {\n    this.mode = EDIT;\n    this.editingItem = saving;\n    this.isOpen = true;\n  }\n\n  cancelEditMode() {\n    this.isOpen = false;\n    this.editingItem = null;\n    this.mode = ADD;\n  }\n}","import { makeAutoObservable } from \"mobx\";\nimport { Store } from \"..\";\nimport { IChartData } from \"../../../../components/Screens/RatesScreen/currency/Currency\";\n\nconst CURRENCY_ID_LIST = [\n  451, //? Евро\n  431, //? Доллар США\n  456, //? Российский рубль\n  468, //? Тайский бат\n  460, //? Турецкая лира\n  426, //? Швейцарский франк\n  429, //? Фунт стерлингов\n  449, //? Гривна\n  // 'https://blockchain.info/ticker',                 //? Bitcoin\n];\n\nconst sendRequest = async (url: string) => {\n  const response = await fetch(url);\n  return await response.json();\n};\n\nconst getDates = (spread: number) => {\n  const today = new Date();\n  const firstStatDay = new Date();\n  firstStatDay.setDate(today.getDate() - spread);\n  return [\n    `${firstStatDay.toJSON().slice(0, 10)}`,\n    `${today.toJSON().slice(0, 10)}`,\n  ];\n};\n\nexport interface IStatistics {\n  Cur_ID: number;\n  Date: string;\n  Cur_OfficialRate: number;\n}\n\nexport interface IRate {\n  Cur_ID: number;\n  Date: string;\n  Cur_Abbreviation: string;\n  Cur_Scale: number;\n  Cur_Name: string;\n  Cur_OfficialRate: number;\n  Cur_Statistics: IStatistics[];\n  Chart_Data: IChartData;\n}\n\nexport class RatesStore {\n  indexStore: Store;\n  data: IRate[] = [];\n  startDate: string;\n  today: string;\n\n  constructor(indexStore: Store) {\n    makeAutoObservable(this);\n    const dates = getDates(40);\n    this.startDate = dates[0];\n    this.today = dates[1];\n    this.indexStore = indexStore;\n  }\n\n  fetchData() {\n    CURRENCY_ID_LIST.forEach(async (id: number) => {\n      const rate: IRate = await sendRequest(\n        `https://www.nbrb.by/api/exrates/rates/${id}`\n      );\n      this.putRate(rate);\n    });\n  }\n\n  async putRate(rate: IRate) {\n    const statAndChart = await this.getRateStatistics(rate.Cur_ID);\n    rate.Cur_Statistics = statAndChart.Cur_Statistics;\n    rate.Chart_Data = statAndChart.Chart_Data;\n    this.data.push(rate);\n  }\n\n  async getRateStatistics(id: number) {\n    const Cur_Statistics: IStatistics[] = await sendRequest(\n      `https://www.nbrb.by/API/ExRates/Rates/Dynamics/${id}?startDate=${this.startDate}&endDate=${this.today}`\n    );\n    \n    const Chart_Data = this.convertStatToChart(Cur_Statistics);\n    return { Cur_Statistics, Chart_Data };\n  }\n\n  convertStatToChart(stat: IStatistics[]): IChartData {\n    const chartData: IChartData = {\n      labels: [],\n      data: [],\n    };\n    stat.map(day => {\n      day.Date = day.Date.slice(5, 10)\n      chartData.labels.push(day.Date);\n      chartData.data.push(day.Cur_OfficialRate);\n    })\n    return chartData;\n  }\n\n}\n","import { makeAutoObservable } from \"mobx\";\nimport { Store } from \"..\";\nimport { IRate } from \"../ratesStore/ratesStore\";\n\nexport interface ISaving {\n  name: string;\n  value: number;\n  rate: number;\n  scale: number;\n}\n\nexport const findRate = (data: IRate[], Cur_Abbreviation: string): number => {\n  let rate = 0;\n  const index = data.findIndex(\n    (rate) => rate.Cur_Abbreviation === Cur_Abbreviation\n  );\n  if (index !== -1) {\n    rate = data[index].Cur_OfficialRate;\n  }\n  return rate;\n};\n\nexport class savingsStore {\n  indexStore: Store;\n  savings: ISaving[] = [];\n  converted: number = 0;\n  date: string;\n  error: boolean = false;\n\n  constructor(indexStore: Store) {\n    makeAutoObservable(this);\n    this.indexStore = indexStore;\n    this.error = this.checkForRates();\n    this.date = indexStore.RatesStore.today;\n    this.getFromDB();\n  }\n\n  checkForRates = () => !!this.indexStore.RatesStore.data.length;\n\n  addSaving(saving: ISaving) {\n    saving.value = Number(saving.value);\n    const S = this.savings.find((item) => item.name === saving.name);\n    if (S) {\n      S.value += saving.value;\n    } else this.savings.push(saving);\n    this.saveToDB();\n  }\n\n  editSaving(savingEdit: ISaving) {\n    savingEdit.value = Number(savingEdit.value);\n    const S = this.savings.find((item) => item.name === savingEdit.name);\n    if (S) {\n      S.value = savingEdit.value;\n    }\n      this.saveToDB();\n  }\n\n  removeSaving(saving: ISaving) {\n    const index = this.savings.findIndex((item) => item.name === saving.name);\n    this.savings.splice(index, 1);\n    this.saveToDB();\n    return this.savings;\n  }\n\n  saveToDB() {\n    this.convertToBYN();\n    localStorage.setItem(\"savings\", JSON.stringify(this.savings));\n  }\n\n  getFromDB() {\n    const savingsAtDB = localStorage.getItem(\"savings\");\n    if (savingsAtDB) {\n      const S: ISaving[] = JSON.parse(savingsAtDB);\n      S.forEach((save) => this.addSaving(save));\n    }\n    this.convertToBYN();\n  }\n\n  convertToBYN() {\n    let result: number = 0;\n    const rates = this.indexStore.RatesStore.data;\n    this.savings.forEach((elem) => {\n      const index = rates.findIndex(\n        (rate) => rate.Cur_Abbreviation === elem.name\n      );\n      if (index !== -1) {\n        const rate = rates[index];\n        elem.rate = rate.Cur_OfficialRate;\n        elem.scale = rate.Cur_Scale;\n        result += (elem.value * elem.rate) / elem.scale;\n      }\n    });\n    this.converted = result;\n  }\n}\n","import { Store } from './features/store'\n\nconst store = new Store();\n\nexport default store;","import { makeAutoObservable } from \"mobx\";\nimport { AuthStore } from \"./authStore/authStore\";\nimport { FormStore } from \"./formStore\";\nimport { RatesStore } from \"./ratesStore/ratesStore\";\nimport { savingsStore } from \"./savingsStore/savingsStore\";\n\nexport class Store {\n  RatesStore;\n  savingsStore;\n  authStore;\n  formStore;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.RatesStore = new RatesStore(this);\n    this.savingsStore = new savingsStore(this);\n    this.authStore = new AuthStore(this);\n    this.formStore = new FormStore(this);\n  }\n\n  initRatesStore() {\n    this.RatesStore.fetchData();\n  }\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport { Menu } from '@material-ui/icons';\nimport {  useHistory } from 'react-router-dom';\nimport {  getAuth } from '@firebase/auth';\nimport { signOut } from 'firebase/auth';\nimport { observer } from 'mobx-react';\nimport { AuthStore } from '../../../app/features/store/authStore/authStore';\n\nconst TopBar: React.FC<{ authStore: AuthStore }> = observer(({ authStore }) => {\n  const auth = authStore.auth;\n\n  const history = useHistory();\n\n  const handleLoginClick = () => {\n    history.push('/login');\n  }\n\n  const handleLogoutClick = () => {\n    const a = getAuth();\n    signOut(a);\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar >\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            My currencies\n          </Typography>\n          {(auth) ?\n            <Button color=\"inherit\" onClick={handleLoginClick} >\n              Login\n            </Button>\n            : <Button color=\"inherit\" onClick={handleLogoutClick} >\n              Log out\n            </Button>\n          }\n\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}) \n\nexport default TopBar;","import React from \"react\"\nimport { BottomNavigation, BottomNavigationAction, Icon } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useState } from \"react\"\nimport { NavLink} from \"react-router-dom\"\n    \nexport const BottomNavigationComponent = () => {\n    const [value, setValue] = useState('rates')\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n    return (\n        <>\n            <Box sx={{ position: \"fixed\", bottom: 0, left: 0, width: \"100%\" }}>\n                <BottomNavigation value={value} onChange={handleChange} >\n                    <BottomNavigationAction\n                        label=\"Rates\"\n                        value=\"rates\"\n                        icon={<Icon>trending_up</Icon>}\n                        component={NavLink}\n                        to='/currency-MUI-pages/rates'\n                    />\n                    <BottomNavigationAction\n                        label=\"Savings\"\n                        value=\"savings\"\n                        icon={<Icon>savings</Icon>}\n                        component={NavLink}\n                        to='/currency-MUI-pages/savings'\n                    />\n                    <BottomNavigationAction\n                        label=\"Converter\"\n                        value=\"converter\"\n                        icon={<Icon>loop</Icon>}\n                        component={NavLink}\n                        to='/currency-MUI-pages/converter'\n                    />\n                </BottomNavigation>\n            </Box>\n        </>\n    )\n}","import React, { useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nconst Converter = () => {\n   \n   useEffect(() => {\n      document.title = 'Curremcy converter'\n   });\n\n   return (<>\n      <Typography variant=\"h4\" component=\"div\">It's going to be currency converter here.</Typography>\n   </>)\n}\nexport default Converter;","import { Line } from 'react-chartjs-2'\n\nexport const LineChart = ({ labels, data, label }) => {\n    return (<>\n        <Line\n            data={{\n                labels: labels,\n                datasets: [{\n                    label: label,\n                    data: data,\n                    fill: 'origin',      // 0: fill to 'origin',\n                    backgroundColor: [\n                        'rgba(0, 0, 0, 0.2)',\n                    ],\n                    borderColor: [\n                        'rgba(0, 0, 0, 1)',\n                    ],\n                    borderWidth: 1\n                }]\n            }}\n        />\n    </>)\n}","import React, { useEffect, useState } from \"react\";\nimport { LineChart } from \"../lineChart/LineChart\";\nimport { Avatar, Card, CardHeader, CardMedia, Collapse, IconButton, IconButtonProps, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\";\nimport { ExpandMore } from \"@material-ui/icons\"\nimport { IRate } from \"../../../../app/features/store/ratesStore/ratesStore\";\n\nexport interface IChartData {\n  labels: string[];\n  data: number[];\n}\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\n\nconst ExpandChart = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props\n  return <IconButton {...other} />\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}))\n\nexport const Currency: React.FC<{ rate: IRate }> = ({ rate}) => {\n\n  const [expanded, setExpanded] = useState(false)\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader\n          avatar={\n            <Avatar>{rate.Cur_Abbreviation}</Avatar>\n          }\n          title={`За ${rate.Cur_Scale} ${rate.Cur_Name}`}\n          subheader={`Текущий курс: ${rate.Cur_OfficialRate}`}\n          action={\n            <ExpandChart\n              expand={expanded}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMore />\n            </ExpandChart>\n          }\n        />\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardMedia>\n            {(rate.Chart_Data.labels.length && rate.Chart_Data.data.length) ?\n              <LineChart\n                labels={rate.Chart_Data && rate.Chart_Data.labels}\n                data={rate.Chart_Data && rate.Chart_Data.data}\n                label={rate.Cur_Abbreviation}\n              />\n              : <Typography  textAlign='center' >There is no valid data for chart.</Typography>\n            }\n\n          </CardMedia>\n        </Collapse>\n      </Card>\n    </>\n  )\n}","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport { Store } from '../../../../app/features/store';\nimport { IRate } from '../../../../app/features/store/ratesStore/ratesStore';\n\nimport { Currency } from '../currency/Currency';\n\nimport { CircularProgress, Stack } from '@mui/material';\nimport { Box } from '@mui/system';\n\n\nexport const CurrencyList: React.FC<{ store: Store }> = observer(({ store }) => {\n\n    const Currencies = store.RatesStore.data;\n\n    useEffect(() => {\n        if (!Currencies.length) {\n            store.initRatesStore();\n        }\n    }, [store, Currencies]);\n\n    return (\n        <Box sx={{ padding: '1.5vh 3%' }}>\n            <Stack direction='column' spacing={2} >\n                {Currencies.length ?\n                    Currencies.map((rate: IRate) => <Currency\n                        key={rate.Cur_ID}\n                        rate={rate}\n                    />)\n                    : <Box sx={{ display: 'flex', justifyContent: 'center' }}> <CircularProgress /> </Box>}\n            </Stack>\n        </Box>\n    )\n})","import React from \"react\";\nimport NumberFormat from \"react-number-format\";\n\ninterface CustomProps {\n   onChange: (event: { target: { name: string; value: string } }) => void;\n   prefix: string;\n   name: string;\n}\n\nconst NumberFormatCustom = React.forwardRef<NumberFormat, CustomProps>(\n   function NumberFormatCustom(props, ref) {\n      const { onChange, prefix, ...other } = props;\n\n      return (\n         <NumberFormat\n            {...other}\n            getInputRef={ref}\n            onValueChange={(values) => {\n               onChange({\n                  target: {\n                     name: props.name,\n                     value: values.value\n                  }\n               });\n            }}\n            thousandSeparator\n            isNumericString\n            prefix=''\n         />\n      );\n   }\n);\n\nexport default NumberFormatCustom","import React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Store } from \"../../../../app/features/store\";\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\nimport { ISaving } from \"../../../../app/features/store/savingsStore/savingsStore\";\nimport { IForm } from \"./Savings\";\nimport NumberFormatCustom from \"./NumberFormatCustom\";\nimport {\n   Button,\n   Dialog,\n   DialogActions,\n   DialogContent,\n   DialogTitle,\n   FormControl,\n   IconButton,\n   InputLabel,\n   MenuItem,\n   Select,\n   SelectChangeEvent,\n   Stack,\n   TextField,\n   Tooltip,\n   Typography\n} from \"@mui/material\";\nimport { DeleteOutlined } from \"@material-ui/icons\";\n\ninterface ISavingEdit {\n   name: string,\n   value: number\n}\n\nconst useAddSavingsDialog = (store: Store) => {\n   const formStore = store.formStore;\n   const savingsStore = store.savingsStore;\n   const ratesStore = store.RatesStore;\n\n   const RATES = ratesStore.data;\n   const ERROR_MSG = 'Can not be empty';\n   const isOpen = formStore.isOpen;\n   const isEditMode = formStore.mode === \"EDIT\";\n   const editingItem = formStore.editingItem;\n   const isOpenDeleteConfirm = formStore.isOpenDeleteConfirm;\n\n   let formTitle = 'Add saving';\n   let defaultValue = 0;\n   let defaultName = '';\n\n   if (formStore.editingItem) {\n      formTitle = `Edit ${formStore.editingItem.name} saving`;\n      defaultName = formStore.editingItem.name;\n      defaultValue = formStore.editingItem.value;\n   }\n\n   const onClose = () => formStore.cancelEditMode();\n   const openDeleteConfirm = () => formStore.openDeleteConfirm();\n   const closeDeleteConfirm = (result: string) => formStore.closeDeleteConfirm(result);\n\n   const editSaving = (data: ISaving) => savingsStore.editSaving(data);\n   const addSaving = (data: ISaving) => savingsStore.addSaving(data);\n\n   const submitForm = (data: ISaving) => {\n      if (isEditMode) editSaving(data);\n      else addSaving(data);\n      onClose();\n   };\n\n\n   return {\n      RATES,\n      ERROR_MSG,\n      isOpen,\n      isEditMode,\n      isOpenDeleteConfirm,\n      formTitle,\n      defaultValue,\n      defaultName,\n      editingItem,\n      submitForm,\n      onClose,\n      openDeleteConfirm,\n      closeDeleteConfirm\n   }\n}\n\n\nconst DeleteConfirmDialog: React.FC<{ isOpenDeleteConfirm: boolean, deletingItem: ISaving | null, closeDeleteConfirm: (arg0: string) => void }> = ({ isOpenDeleteConfirm, deletingItem, closeDeleteConfirm }) => {\n\n   const deleteCancel = () => closeDeleteConfirm('NO');\n   const deleteSubmit = () => closeDeleteConfirm('YES');\n\n   return (\n      <>\n         <Dialog open={isOpenDeleteConfirm}>\n            <DialogContent>\n               <Typography variant=\"body1\" >Are you sure you want to delete this item?</Typography>\n               <Typography variant=\"body2\">{deletingItem ? `${deletingItem.value} ${deletingItem.name}` : null}</Typography>\n            </DialogContent>\n            <DialogActions>\n               <Button variant=\"contained\" onClick={deleteSubmit}>Yes, I am sure</Button>\n               <Button variant=\"outlined\" onClick={deleteCancel}>Cancel</Button>\n            </DialogActions>\n         </Dialog>\n      </>\n   )\n}\n\n\nconst AddSavingsDialog: React.FC<IForm> = observer(({ store }) => {\n\n   const {\n      RATES,\n      ERROR_MSG,\n      isOpen,\n      isEditMode,\n      isOpenDeleteConfirm,\n      formTitle,\n      defaultValue,\n      defaultName,\n      editingItem,\n      submitForm,\n      onClose,\n      openDeleteConfirm,\n      closeDeleteConfirm\n   } = useAddSavingsDialog(store);\n\n\n   const [Name, setName] = useState(defaultName);\n   const [Value, setValue] = useState(defaultValue);\n   const [ValueError, setValueError] = useState('')\n   const [NameError, setNameError] = useState('')\n\n   useEffect(() => {\n      setName(defaultName);\n      setValue(defaultValue);\n   }, [defaultName, defaultValue]);\n\n   const validateOnChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | SelectChangeEvent<string>) => {\n      const target = e.target;\n      const value = target.value;\n      if (value) {\n         if (target.name === 'value') {\n            setValueError('');\n            setValue(Number(value));\n         } else {\n            setNameError('');\n            setName(value);\n         }\n      }\n      return\n   }\n\n   const handleConfirm = () => {\n      if (Name.trim() && Number(Value)) {\n         setNameError('');\n         setName('');\n         setValueError('');\n         setValue(0);\n         const newSaving: ISaving = {\n            name: Name,\n            value: Value,\n            scale: 0,\n            rate: 0\n         }\n         submitForm(newSaving)\n      } else (!Name.trim()) ? setNameError(ERROR_MSG) : setValueError(ERROR_MSG)\n   }\n\n   return (\n      <>\n         <DeleteConfirmDialog deletingItem={editingItem} isOpenDeleteConfirm={isOpenDeleteConfirm} closeDeleteConfirm={closeDeleteConfirm} />\n         <Dialog open={isOpen}>\n\n            {RATES.length ?\n               <>\n                  <DialogTitle>{formTitle}</DialogTitle>\n                  <DialogContent >\n                     <Stack direction=\"row\">\n                        <FormControl >\n                           <TextField\n                              name=\"value\"\n                              error={!!ValueError}\n                              helperText={ValueError}\n                              margin='normal'\n                              label='Amount'\n                              value={Value}\n                              onChange={(e) => validateOnChange(e)}\n                              autoComplete='off'\n                              InputProps={{\n                                 inputComponent: NumberFormatCustom as any,\n                              }}\n                              variant='standard'\n                           />\n                        </FormControl>\n                        <FormControl margin='normal' sx={{ width: '150px' }}>\n                           <InputLabel\n                              id=\"demo-simple-select-label\"\n                              error={!!NameError}\n                           >\n                              Currency\n                           </InputLabel>\n                           <Select\n                              name=\"name\"\n                              labelId=\"currency-select-label\"\n                              id=\"currency-select\"\n                              error={!!NameError}\n                              disabled={!!isEditMode}\n                              value={Name}\n                              onChange={(e) => validateOnChange(e)}\n                              label=\"Currency\"\n                              variant='standard'\n                           >\n                              {RATES.map((rate) => (\n                                 <MenuItem key={rate.Cur_ID} value={rate.Cur_Abbreviation}> {rate.Cur_Abbreviation} </MenuItem>\n                              ))}\n                           </Select>\n                        </FormControl>\n                     </Stack>\n                  </DialogContent >\n                  <DialogActions>\n                     <Stack direction=\"row\" width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n                        <div>\n                           {isEditMode && (\n                              <Tooltip title=\"Delete\">\n                                 <IconButton color=\"error\" onClick={openDeleteConfirm}>\n                                    <DeleteOutlined />\n                                 </IconButton>\n                              </Tooltip>)\n                           }\n\n                        </div>\n                        <div>\n                           <Button onClick={handleConfirm} variant='contained' type=\"submit\">Confirm</Button>\n                           <Button onClick={onClose} type=\"reset\">Cansel</Button>\n                        </div>\n                     </Stack>\n\n                  </DialogActions>\n               </>\n               :\n               <>\n                  <DialogContent >\n                     <Typography>Please, load rates to continue.</Typography>\n                  </DialogContent >\n                  <DialogActions>\n                     <Button onClick={onClose} type=\"reset\">Cansel</Button>\n                  </DialogActions>\n               </>\n            }\n\n         </Dialog >\n      </>\n   );\n})\nexport default AddSavingsDialog","import React, { useEffect, useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { Store } from '../../../../app/features/store';\n\nconst Converted: React.FC<{ store: Store }> = observer(({ store }) => {\n  const converted = store.savingsStore.converted;\n  const [convertedError, setconvertedError] = useState('');\n\n  useEffect(() => {\n    if (!store.RatesStore.data.length) {\n      setconvertedError(\"You probably need to load rates first\");\n    } else {\n      store.savingsStore.convertToBYN();\n    }\n  }, [])\n\n  return (\n    <Typography variant=\"h4\" textAlign=\"center\">{convertedError ? convertedError : converted.toFixed(2)}</Typography>\n  )\n})\n\nexport default Converted;\n","import React from \"react\";\nimport store from \"../../../../app/store\";\nimport { ISaving } from \"../../../../app/features/store/savingsStore/savingsStore\";\n\nimport Converted from \"./Converted\";\nimport { Chip, Stack } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { observer } from \"mobx-react\";\nimport { Store } from \"../../../../app/features/store\";\n\nconst useSavingsList = (store: Store) => {\n   const formStore = store.formStore;\n   const savingsStore = store.savingsStore;\n\n   const handleSavingEditClick = (saving: ISaving) => {\n      formStore.setEditMode(saving);\n   }\n\n   const savings = savingsStore.savings;\n   return { savings, handleSavingEditClick}\n}\n\n\nconst SavingsList: React.FC<{store: Store}> = observer(({store}) => {\n\n   const { savings, handleSavingEditClick } = useSavingsList(store);\n\n   return (<>\n      <Box sx={{ padding: '1.5rem 0' }}>\n         <Stack direction=\"row\" spacing={2} justifyContent=\"space-evenly\" sx={{ flexWrap: \"wrap\", paddingBottom: '1rem' }}>\n            {savings.length ? savings.map(saving => <Chip\n               key={saving.name}\n               variant=\"outlined\"\n               color=\"primary\"\n               label={`${saving.value} ${saving.name}`}\n               onClick={() => handleSavingEditClick(saving)}\n            />) : null}\n         </Stack>\n         <Converted store={ store}/>\n      </Box>\n   </>)\n}) \n\nexport default SavingsList","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { UseFormReset } from \"react-hook-form\";\nimport { Store } from \"../../../../app/features/store\";\nimport { ISaving } from \"../../../../app/features/store/savingsStore/savingsStore\";\n\nimport AddSavingsDialog from \"./FormAddSavings\";\nimport SavingsList from \"./SavingsList\";\nimport { Fab } from \"@mui/material\";\n\nimport { Add } from \"@material-ui/icons\";\n\n\nexport interface IForm {\n   store: Store;\n}\n\nconst Savings: React.FC<{ store: Store }> = observer(({ store }) => {\n\n   const Savings = store.savingsStore.savings;\n   const [open, setOpen] = useState(false);\n\n   const handleClickModal = () => {\n      store.formStore.toggleForm();\n   }\n\n   const handleClose = (resetFunc: UseFormReset<ISaving>) => {\n      setOpen(false);\n      resetFunc();\n   }\n\n   return (\n      <>\n         <SavingsList store={store} />\n         <AddSavingsDialog store={store} />\n         <Fab\n            sx={{ margin: \"auto 10px 10px auto\", position: \"fixed\", right: '1.5rem', bottom: '5rem' }}\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={handleClickModal}\n         >\n            <Add />\n         </Fab>\n      </>\n   );\n})\n\nexport default Savings;\n","import React from 'react';\nimport { Container } from '@mui/material';\nimport { Route, Switch } from 'react-router';\nimport store from '../../../app/store';\nimport TopBar from '../../UI/appBar/AppBar';\nimport { BottomNavigationComponent } from '../../UI/bottomNavigation/BottomNavigation';\nimport Converter from '../ConverterScreen/converter/Converter';\nimport { CurrencyList } from '../RatesScreen/currencyList/currencyList';\nimport Savings from '../SavingsScreen/savings/Savings';\n\nconst Base = () => {\n  return (\n    <div>\n      <TopBar authStore={store.authStore} />\n\n      <Container maxWidth=\"sm\" sx={{ padding: '4rem 0' }} >\n        <Switch>\n          <Route path=\"/currency-MUI-pages/savings\"> <Savings store={store} /> </Route>\n          <Route path=\"/currency-MUI-pages/converter\"> <Converter /> </Route>\n          <Route path=\"/currency-MUI-pages/rates\"> <CurrencyList store={store} /> </Route>\n        </Switch>\n      </Container>\n\n      <BottomNavigationComponent />\n    </div>\n  )\n}\n\nexport default Base\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Button, FormControl, Link, Stack, TextField, Typography } from '@mui/material';\nimport { Controller, useForm } from 'react-hook-form';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\n\ninterface IFormLogin {\n  login: string,\n  password: string,\n}\n\nconst useLoginForm = () => {\n\n  const history = useHistory();\n  \n  const auth = getAuth();\n\n\n  const goTo = (url: string) => {\n    history.push(url);\n  }\n\n\n  const handleLogin = (data: IFormLogin) => {\n    signInWithEmailAndPassword(auth, data.login, data.password)\n      .then((userCred) => {\n        const user = userCred.user;\n        goTo('/currency-MUI-pages/rates');\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      })\n  }\n\n  return { goTo, handleLogin }\n}\n\nconst LoginForm = () => {\n\n  const { goTo, handleLogin } = useLoginForm();\n\n  const { reset, formState: { errors }, handleSubmit, control } = useForm<IFormLogin>({\n    defaultValues: {\n      login: '',\n      password: '',\n    },\n    mode: \"onChange\"\n  })\n\n  return (\n    <div>\n      <Typography variant=\"h4\" >\n        Login\n      </Typography>\n      <Stack mt={3} mb={3} direction=\"column\" spacing={2}>\n\n        <FormControl>\n          <Controller\n            name=\"login\"\n            control={control}\n            rules={{\n              required: { value: true, message: 'Can not be empty' },\n              minLength: { value: 5, message: 'Can not be shorter 5 symbols' },\n            }}\n            render={({ field }) => <TextField\n              {...field}\n              error={!!errors.login}\n              helperText={errors.login ? errors.login.message : null}\n              type=\"email\"\n              id=\"login\"\n              label=\"Login\"\n              variant=\"filled\"\n            />}\n          />\n        </FormControl>\n\n        <FormControl>\n          <Controller\n            name=\"password\"\n            control={control}\n            rules={{\n              required: { value: true, message: 'Can not be empty' },\n              minLength: { value: 5, message: 'Can not be shorter 5 symbols' },\n              maxLength: { value: 14, message: 'Can not be longer 14 symbols' },\n            }}\n            render={({ field }) => <TextField\n              {...field}\n              error={!!errors.password}\n              helperText={errors.password ? errors.password.message : null}\n              type=\"password\"\n              id=\"password\"\n              label=\"Password\"\n              variant=\"filled\"\n            />}\n          />\n        </FormControl>\n\n      </Stack>\n\n      <Stack mt={2} direction=\"column\" spacing={2}>\n        <Button variant=\"contained\" onClick={handleSubmit(handleLogin)} >Log in</Button>\n        <Typography>\n          Don't have and account?\n\n          <Link sx={{ cursor: 'pointer' }}\n            onClick={() => goTo('/register')} >\n            Register\n          </Link>\n\n        </Typography>\n      </Stack>\n\n    </div>\n  )\n}\n\nexport default LoginForm\n","import { Button, Link, Stack, TextField, Typography } from '@mui/material'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst RegisterForm = () => {\n  const history = useHistory();\n  const goToLoginPage = () => {\n    history.push('/login');\n  }\n  return (\n    <div>\n      <Typography variant=\"h4\" >\n        Register\n      </Typography>\n      <Stack mt={3} mb={3} direction=\"column\" spacing={2}>\n        <TextField id=\"login\" label=\"Login\" variant=\"filled\" />\n        <TextField type=\"password\" id=\"password\" label=\"Password\" variant=\"filled\" />\n        <TextField type=\"password\" id=\"password-repeat\" label=\"Repeat password\" variant=\"filled\" />\n      </Stack>\n\n      <Stack mt={2} direction=\"column\" spacing={2}>\n        <Button variant=\"contained\" >Register</Button>\n        <Typography>Already registered? <Link sx={{ cursor: 'pointer' }} onClick={goToLoginPage} >Sign in</Link> </Typography>\n      </Stack>\n    </div>\n  )\n}\n\nexport default RegisterForm\n","import React from 'react'\nimport { Card, CardContent } from '@mui/material'\nimport { Route, Switch } from 'react-router'\nimport LoginForm from './LoginForm'\nimport RegisterForm from './RegisterForm'\nimport \"./LoginBase.scss\"\n\nconst LoginBase = () => {\n  return (\n    <div className=\"login-wrapper\">\n      <Card sx={{ width: '100%', maxWidth: '400px' }}>\n        <CardContent>\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/register\" component={RegisterForm} />\n          </Switch>\n        </CardContent>\n\n      </Card>\n    </div>\n  )\n}\n\nexport default LoginBase\n","// import { initializeApp } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n  \nconst firebaseConfig = {\n  apiKey: \"AIzaSyAcL8bZbMgkg5UdqrwXkWfN4B6fYJL72zs\",\n  authDomain: \"vuecrm-practice.firebaseapp.com\",\n  projectId: \"vuecrm-practice\",\n  storageBucket: \"vuecrm-practice.appspot.com\",\n  messagingSenderId: \"836081542694\",\n  appId: \"1:836081542694:web:1e87a910a12bff4bb368e7\",\n  measurementId: \"G-M9DZVSZ8R5\",\n}\n// const FirebaseApp = initializeApp(firebaseConfig);\nexport default firebaseConfig;","import React from 'react';\nimport { observer } from 'mobx-react';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Store } from './app/features/store';\nimport Base from './components/Screens/Base/Base';\nimport LoginBase from './components/Screens/LoginAndRegisterScreen/LoginBase';\nimport { useMediaQuery, createTheme, ThemeProvider, CssBaseline } from '@mui/material';\nimport './App.css';\nimport firebaseConfig from './app/features/auth/firebaseConfig';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\nimport { useHistory } from 'react-router';\n\nconst App: React.FC<{ store: Store }> = observer(({ store }) => {\n  const history = useHistory();\n  const app = initializeApp(firebaseConfig);\n\n  const auth = getAuth();\n  onAuthStateChanged(auth, (user) => {\n    if (!user) {\n      history.push('/login');\n    } else {\n      history.push('/currency-MUI-pages/rates')\n    }\n  })\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n\n        <Route path=\"/currency-MUI-pages\" component={Base} />\n        <Route path=\"/\" component={LoginBase} />\n\n      </Switch>\n    </ThemeProvider>\n  );\n})\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './app/store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App store={store} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}