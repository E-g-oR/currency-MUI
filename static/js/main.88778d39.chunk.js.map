{"version":3,"sources":["features/currencies/currenciesSlice.js","components/lineChart/LineChart.jsx","components/currency/Currency.jsx","components/currencyList/currencyList.jsx","components/appBar/AppBar.jsx","components/bottomNavigation/BottomNavigation.jsx","components/converter/Converter.jsx","components/savings/NumberFormatCustom.tsx","components/savings/FormAddSavings.tsx","components/savings/SavingsList.tsx","components/savings/Savings.tsx","App.js","app/store.js","index.js"],"names":["currenciesSlice","createSlice","name","initialState","data","savings","reducers","setData","state","action","push","payload","setStatistics","map","currency","Cur_ID","Cur_Statistics","setSaving","value","parseFloat","index","findIndex","elem","actions","LineChart","labels","label","datasets","fill","backgroundColor","borderColor","borderWidth","ExpandChart","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Currency","startDate","endDate","dispatch","useDispatch","useState","isStatLoaded","setIsStatLoaded","chartData","expanded","setExpanded","useEffect","fetch","then","responseStat","json","dataStat","length","day","Date","slice","Cur_OfficialRate","Grid","item","Card","CardHeader","avatar","Avatar","Cur_Abbreviation","title","Cur_Name","subheader","onClick","ExpandMore","Collapse","in","timeout","unmountOnExit","CardMedia","currIDList","CurrencyList","dates","setDates","useSelector","currencies","document","spread","today","firstStatDay","setDate","getDate","toJSON","getDates","a","responseCur","dataCur","Box","sx","padding","container","spacing","direction","display","CircularProgress","TopBar","React","setTitle","flexGrow","AppBar","position","Toolbar","size","edge","color","mr","Menu","Typography","variant","component","Button","BottomNavigationComponent","setValue","bottom","left","width","BottomNavigation","onChange","event","newValue","BottomNavigationAction","icon","Icon","NavLink","to","NumberFormatCustom","forwardRef","ref","prefix","getInputRef","onValueChange","values","target","thousandSeparator","isNumericString","AddSavingsDialog","onClose","open","mode","savingObj","useForm","defaultValues","reset","errors","formState","handleSubmit","control","Dialog","DialogTitle","onSubmit","DialogContent","Stack","FormControl","rules","required","message","render","field","TextField","error","helperText","margin","InputProps","inputComponent","InputLabel","id","Select","labelId","MenuItem","DialogActions","type","SavingsList","justifyContent","flexWrap","saving","Chip","console","log","handleChipClick","Savings","setOpen","resetFunc","Fab","right","Add","App","prefersDarkMode","useMediaQuery","useMemo","createTheme","palette","ThemeProvider","CssBaseline","Container","maxWidth","path","Converter","configureStore","reducer","ReactDOM","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.88778d39.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const currenciesSlice = createSlice({\n    name: 'currencies',\n    initialState: {\n        data: [],\n        savings: []\n    },\n    reducers: {\n        setData: (state, action) => {\n            state.data.push(action.payload)\n        },\n        setStatistics: (state, action) => {\n            state.data.map(currency => (currency.Cur_ID === action.payload[0].Cur_ID) ? currency.Cur_Statistics = action.payload : currency)\n        },\n        setSaving: (state, action) => {\n            action.payload.value = parseFloat(action.payload.value)\n            const index = state.savings.findIndex(elem => elem.name === action.payload.name)\n            if (index !== -1) {\n                state.savings[index].value += action.payload.value\n            } else state.savings.push(action.payload)\n        }\n    }\n})\n\nexport const { setData, setStatistics, setSaving } = currenciesSlice.actions\n\nexport default currenciesSlice.reducer","import { Line } from 'react-chartjs-2'\n\nexport const LineChart = ({ labels, data, label }) => {\n    return (<>\n        <Line\n            data={{\n                labels: labels,\n                datasets: [{\n                    label: label,\n                    data: data,\n                    fill: 'origin',      // 0: fill to 'origin',\n                    backgroundColor: [\n                        'rgba(0, 0, 0, 0.2)',\n                    ],\n                    borderColor: [\n                        'rgba(0, 0, 0, 1)',\n                    ],\n                    borderWidth: 1\n                }]\n            }}\n        />\n    </>)\n}","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setStatistics } from \"../../features/currencies/currenciesSlice\";\nimport { LineChart } from \"../lineChart/LineChart\";\nimport { Avatar, Card, CardHeader, CardMedia, Collapse, Grid, IconButton } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\";\nimport { ExpandMore } from \"@material-ui/icons\"\n\n\nconst ExpandChart = styled((props) => {\n    const { expand, ...other } = props\n    return <IconButton {...other} />\n})(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n    }),\n}))\n\n\n\nexport const Currency = ({ currency, startDate, endDate }) => {\n    const dispatch = useDispatch()\n    const [isStatLoaded, setIsStatLoaded] = useState(false)\n    const chartData = {\n        labels: [],\n        data: []\n    }\n    const [expanded, setExpanded] = useState(false)\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n    useEffect(() => {\n        if (!currency.Cur_Statistics) {\n            fetch(`https://www.nbrb.by/API/ExRates/Rates/Dynamics/${currency.Cur_ID}?startDate=${startDate}&endDate=${endDate}`)\n                .then(responseStat => responseStat.json())\n                .then(dataStat => {\n                    dispatch(setStatistics(dataStat))\n                    setIsStatLoaded(true)\n                })\n        }\n\n    }, [dispatch, startDate, endDate, currency.Cur_ID])\n\n\n\n    if (isStatLoaded && chartData.data.length === 0) {\n        currency.Cur_Statistics.map(day => {\n            chartData.labels.push(day.Date.slice(5, 10))\n            return chartData.data.push(day.Cur_OfficialRate)\n        })\n    }\n\n    return (\n        <>\n            <Grid item>\n                <Card>\n                    <CardHeader\n                        avatar={\n                            <Avatar>{currency.Cur_Abbreviation}</Avatar>\n                        }\n                        title={`Валюта: ${currency.Cur_Name}`}\n                        subheader={`Текущий курс: ${currency.Cur_OfficialRate}`}\n                        action={\n                            <ExpandChart\n                                expand={expanded}\n                                onClick={handleExpandClick}\n                                aria-expanded={expanded}\n                                aria-label=\"show more\"\n                            >\n                                <ExpandMore />\n                            </ExpandChart>\n                        }\n                    />\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                        <CardMedia>\n                            <LineChart\n                                labels={currency.Cur_Statistics && currency.Cur_Statistics.map(day => day.Date.slice(5, 10))}\n                                data={currency.Cur_Statistics && currency.Cur_Statistics.map(day => day.Cur_OfficialRate)}\n                                label={currency.Cur_Abbreviation} />\n                        </CardMedia>\n                    </Collapse>\n                </Card>\n            </Grid>\n\n        </>\n    )\n}","import { CircularProgress, Grid } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { setData } from '../../features/currencies/currenciesSlice';\nimport { Currency } from '../currency/Currency';\n\nconst currIDList = [\n    451,      //? Евро\n    431,      //? Доллар США\n    456,      //? Российский рубль\n    // 468,      //? Тайский бат\n    460,      //? Турецкая лира\n    426,      //? Швейцарский франк\n    429,      //? Фунт стерлингов\n    449,      //? Гривна\n    // 'https://blockchain.info/ticker',                 //? Bitcoin\n];\n\nexport const CurrencyList = () => {\n    const [dates, setDates] = useState([])\n    const data = useSelector(state => state.currencies.data)\n    const dispatch = useDispatch()\n\n    const getDates = (spread) => {\n        const today = new Date()\n        const firstStatDay = new Date()\n        firstStatDay.setDate(today.getDate() - spread)\n        return [`${firstStatDay.toJSON().slice(0, 10)}`, `${today.toJSON().slice(0, 10)}`]\n    }\n\n    useEffect(() => {\n        document.title = 'Exchange rates'\n        if (data.length === 0) {\n            setDates(getDates(40))\n            currIDList.map(async (Cur_ID) => {\n                fetch(`https://www.nbrb.by/api/exrates/rates/${Cur_ID}`)\n                    .then(responseCur => responseCur.json())\n                    .then(dataCur => dispatch(setData(dataCur)))\n            })\n        }\n    }, [dispatch])\n\n\n    return (\n        <Box sx={{ padding: '1.5vh 0' }}>\n            <Grid container spacing={1.5} direction=\"column\" >\n                {data.length ? data.map(currency => <Currency\n                    currency={currency}\n                    startDate={dates[0]}\n                    endDate={dates[1]}\n                    key={currency.Cur_ID}\n                />) : <Box sx={{ display: 'flex' }}> <CircularProgress /> </Box>}\n            </Grid>\n        </Box>\n    )\n}\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport { Menu } from '@material-ui/icons';\n\nexport default function TopBar() {\n   const [title, setTitle] = React.useState()\n   React.useEffect(() => {\n      setTitle(document.title)\n   },[document.title])\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <Menu/>\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {title}\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","import React from \"react\"\nimport { BottomNavigation, BottomNavigationAction, Icon } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useState } from \"react\"\nimport { BrowserRouter, Link, Switch,Route, NavLink} from \"react-router-dom\"\nimport { CurrencyList } from \"../currencyList/currencyList\"\nimport TopBar from '../appBar/AppBar'\n    \nexport const BottomNavigationComponent = () => {\n    const [value, setValue] = useState('rates')\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n    return (\n        <>\n            <Box sx={{ position: \"fixed\", bottom: 0, left: 0, width: \"100%\" }}>\n                <BottomNavigation value={value} onChange={handleChange} >\n                    <BottomNavigationAction\n                        label=\"Rates\"\n                        value=\"rates\"\n                        icon={<Icon>trending_up</Icon>}\n                        component={NavLink}\n                        to='/currency-MUI-pages'\n                    />\n                    <BottomNavigationAction\n                        label=\"Savings\"\n                        value=\"savings\"\n                        icon={<Icon>savings</Icon>}\n                        component={NavLink}\n                        to='/currency-MUI-pages/savings'\n                    />\n                    <BottomNavigationAction\n                        label=\"Converter\"\n                        value=\"converter\"\n                        icon={<Icon>loop</Icon>}\n                        component={NavLink}\n                        to='/currency-MUI-pages/converter'\n                    />\n                </BottomNavigation>\n            </Box>\n        </>\n    )\n}","import { Typography } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport SimpleDialogDemo from \"../dialog/Dialog\";\n\nexport default function () {\n   useEffect(() => {\n      document.title = 'Curremcy converter'\n   })\n   return (<>\n      <Typography variant=\"h4\" component=\"div\">It's going to be currency converter here.</Typography>\n   </>)\n}","import React from \"react\";\nimport NumberFormat from \"react-number-format\";\n\ninterface CustomProps {\n   onChange: (event: { target: { name: string; value: string } }) => void;\n   prefix: string;\n   name: string;\n}\n\nconst NumberFormatCustom = React.forwardRef<NumberFormat, CustomProps>(\n   function NumberFormatCustom(props, ref) {\n      const { onChange, prefix, ...other } = props;\n\n      return (\n         <NumberFormat\n            {...other}\n            getInputRef={ref}\n            onValueChange={(values) => {\n               onChange({\n                  target: {\n                     name: props.name,\n                     value: values.value\n                  }\n               });\n            }}\n            thousandSeparator\n            isNumericString\n            prefix=''\n         />\n      );\n   }\n);\n\nexport default NumberFormatCustom","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, Stack, TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { setSaving } from \"../../features/currencies/currenciesSlice\";\nimport NumberFormatCustom from \"./NumberFormatCustom\";\nimport { IForm, ISaving } from \"./Savings\";\n\nconst AddSavingsDialog: React.FC<IForm> = ({ onClose, open, mode, savingObj }) => {\n\n   const dispatch = useDispatch()\n   const { reset, formState: { errors }, handleSubmit, control } = useForm<ISaving>({\n      defaultValues: {\n         name: '',\n         value: '',\n      },\n      mode: \"onChange\"\n   })\n\n   const submitForm: SubmitHandler<ISaving> = data => {\n      dispatch(setSaving(data))\n      onClose(reset)\n   };\n   return (\n      <>\n         <Dialog open={open}>\n            <DialogTitle>{mode === 'edit' ? `Edit ${savingObj && savingObj.name} saving` : 'Add Savings'}</DialogTitle>\n            <form onSubmit={handleSubmit(submitForm)}>\n               <DialogContent >\n                  <Stack direction=\"row\">\n                     <FormControl >\n                        <Controller\n                           name='value'\n                           control={control}\n                           rules={{ required: { value: true, message: 'Please fill this' } }}\n                           render={({ field }) => <TextField\n                              {...field}\n                              error={!!errors.value}\n                              helperText={errors.value ? errors.value.message : null}\n                              margin='normal'\n                              label='Amount'\n                              InputProps={{\n                                 inputComponent: NumberFormatCustom as any,\n\n                              }}\n                              variant='standard'\n                           />}\n                        />\n                     </FormControl>\n                     <FormControl margin='normal'>\n                        <Controller\n                           name=\"name\"\n                           control={control}\n                           rules={{ required: true }}\n                           render={({ field }) => <>\n                              <InputLabel id=\"demo-simple-select-label\">Currency</InputLabel>\n                              <Select {...field} labelId=\"currency-select-label\"\n                                 id=\"currency-select\"\n                                 label=\"Currency\"\n                                 variant='standard'\n                              >\n                                 <MenuItem value='USD'>$</MenuItem>\n                                 <MenuItem value='EUR'>€</MenuItem>\n                                 <MenuItem value='RUB'>₽</MenuItem>\n                                 <MenuItem value='GBP'>£</MenuItem>\n                                 <MenuItem value='BTC'>₿</MenuItem>\n                                 <MenuItem value='TRY'>₤</MenuItem>\n                              </Select>\n                           </>}\n                        />\n                     </FormControl>\n                  </Stack>\n               </DialogContent >\n               <DialogActions>\n                  <Button variant='contained' type=\"submit\">Confirm</Button>\n                  <Button onClick={() => { onClose(reset) }} type=\"reset\">Cansel</Button>\n               </DialogActions>\n            </form>\n         </Dialog >\n      </>\n   );\n}\nexport default AddSavingsDialog","import { Chip, Stack } from \"@mui/material\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ISaving, IState } from \"./Savings\";\n\nconst SavingsList: React.FC = () => {\n   const savings = useSelector((state: IState) => state.currencies.savings)\n   const handleChipClick = (saving: ISaving) => {\n      console.log(`value: ${saving.value}, name: ${saving.name}`);\n   }\n\n   return (<>\n      <Stack direction=\"row\" spacing={2} justifyContent=\"space-evenly\" sx={{ flexWrap: \"wrap\" }}>\n         {savings.length ? savings.map(saving => <Chip\n            key={saving.name}\n            variant=\"outlined\"\n            color=\"primary\"\n            label={`${saving.value} ${saving.name}`}\n            onClick={() => handleChipClick(saving)}\n         />) : null}\n      </Stack>\n   </>)\n}\n\nexport default SavingsList","\nimport { Add } from \"@material-ui/icons\";\nimport { Chip, Fab, Stack, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { UseFormReset } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport AddSavingsDialog from \"./FormAddSavings\";\nimport SavingsList from \"./SavingsList\";\n\nexport interface ISaving {\n   name: string,\n   value: string\n}\nexport interface IState {\n   currencies: {\n      data: [],\n      savings: ISaving[]\n   }\n}\nexport interface IForm {\n   onClose: (func: UseFormReset<ISaving>) => void,\n   open: boolean,\n   mode?: 'edit',\n   savingObj?: ISaving\n}\n\n\n\n\n\nexport default function Savings() {\n   const [savingsList, setSavingsList] = useState([])\n   const [open, setOpen] = useState(false)\n\n   const handleClickOpen = () => {\n      setOpen(true)\n   }\n   const handleClose = (resetFunc: UseFormReset<ISaving>) => {\n      setOpen(false)\n      resetFunc()\n   }\n\n   return (\n      <>\n         <Typography variant=\"h4\" component=\"div\">\n            Coming soon! Monitor your savings here.\n         </Typography>\n\n         <SavingsList />\n\n         <AddSavingsDialog onClose={handleClose} open={open} />\n         <Fab\n            sx={{ margin: \"auto 10px 10px auto\", position: \"fixed\", right: '1.5rem', bottom: '5rem' }}\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={() => handleClickOpen()}\n         >\n            <Add />\n         </Fab>\n      </>\n   );\n}\n","import React from 'react';\nimport { CurrencyList } from './components/currencyList/currencyList';\nimport { BottomNavigationComponent } from './components/bottomNavigation/BottomNavigation';\nimport { Container, useMediaQuery, createTheme, ThemeProvider, CssBaseline } from '@mui/material';\nimport './App.css';\nimport TopBar from './components/appBar/AppBar';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Converter from './components/converter/Converter';\nimport Savings from './components/savings/Savings';\n\n\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth=\"sm\" sx={{padding:'7vh 1rem', position: 'relative'}}>\n          <TopBar />\n          <Switch>\n            <Route path='/currency-MUI-pages/savings'>\n              <Savings/>\n            </Route>\n            <Route path='/currency-MUI-pages/converter'>\n              <Converter/>\n            </Route>\n            <Route path=\"/\">\n              <CurrencyList />\n            </Route>\n            </Switch>\n          <BottomNavigationComponent />\n        </Container>\n      </ThemeProvider>\n    </Router>\n\n  );\n}\n\nexport default App;\n\n\n","import { configureStore } from '@reduxjs/toolkit'\nimport currenciesSlice from '../features/currencies/currenciesSlice'\n\nexport default configureStore({\n    reducer: {\n        currencies: currenciesSlice\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}