{"version":3,"sources":["features/currencies/currenciesSlice.js","components/lineChart/LineChart.jsx","components/currency/Currency.jsx","components/currencyList/currencyList.jsx","components/appBar/AppBar.jsx","components/bottomNavigation/BottomNavigation.jsx","components/converter/Converter.jsx","components/savings/Savings.jsx","App.js","app/store.js","index.js"],"names":["currenciesSlice","createSlice","name","initialState","data","reducers","setData","state","action","push","payload","setStatistics","map","currency","Cur_ID","Cur_Statistics","actions","LineChart","labels","label","datasets","fill","backgroundColor","borderColor","borderWidth","ExpandChart","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Currency","startDate","endDate","dispatch","useDispatch","useState","isStatLoaded","setIsStatLoaded","chartData","expanded","setExpanded","useEffect","fetch","then","responseStat","json","dataStat","length","day","Date","slice","Cur_OfficialRate","Grid","item","Card","CardHeader","avatar","Avatar","Cur_Abbreviation","title","Cur_Name","subheader","onClick","ExpandMore","Collapse","in","timeout","unmountOnExit","CardMedia","currIDList","CurrencyList","dates","setDates","useSelector","currencies","document","spread","today","firstStatDay","setDate","getDate","toJSON","getDates","a","responseCur","dataCur","Box","sx","padding","container","spacing","direction","TopBar","React","setTitle","flexGrow","AppBar","position","Toolbar","size","edge","color","mr","Menu","Typography","variant","component","Button","BottomNavigationComponent","value","setValue","bottom","left","width","BottomNavigation","onChange","event","newValue","BottomNavigationAction","icon","Icon","NavLink","href","to","Savings","About","Users","App","prefersDarkMode","useMediaQuery","useMemo","createTheme","palette","mode","ThemeProvider","CssBaseline","Container","maxWidth","path","Converter","exact","configureStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.5c84b428.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const currenciesSlice = createSlice({\n    name: 'currencies',\n    initialState: {\n        data: []\n    },\n    reducers: {\n        setData: (state, action) => {\n            state.data.push(action.payload)\n        },\n        setStatistics: (state, action) => {\n            state.data.map(currency => (currency.Cur_ID === action.payload[0].Cur_ID) ? currency.Cur_Statistics = action.payload : currency)\n        }\n    }\n})\n\nexport const { setData, setStatistics } = currenciesSlice.actions\n\nexport default currenciesSlice.reducer","import { Line } from 'react-chartjs-2'\n\nexport const LineChart = ({ labels, data, label }) => {\n    return (<>\n        <Line\n            data={{\n                labels: labels,\n                datasets: [{\n                    label: label,\n                    data: data,\n                    fill: 'origin',      // 0: fill to 'origin',\n                    backgroundColor: [\n                        'rgba(0, 0, 0, 0.2)',\n                    ],\n                    borderColor: [\n                        'rgba(0, 0, 0, 1)',\n                    ],\n                    borderWidth: 1\n                }]\n            }}\n        />\n    </>)\n}","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setStatistics } from \"../../features/currencies/currenciesSlice\";\nimport { LineChart } from \"../lineChart/LineChart\";\nimport { Avatar, Card, CardHeader, CardMedia, Collapse, Grid, IconButton } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\";\nimport {  ExpandMore} from \"@material-ui/icons\"\n\n\nconst ExpandChart = styled((props) => {\n    const { expand, ...other } = props\n    return <IconButton {...other} />\n})(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n    }),\n}))\n\n\n\nexport const Currency = ({ currency, startDate, endDate }) => {\n    const dispatch = useDispatch()\n    const [isStatLoaded, setIsStatLoaded] = useState(false)\n    const chartData = {\n        labels: [],\n        data: []\n    }\n\n    // const [didGrow, setDidGrow] = useState(false)\n    // const checkDidGrow = () => {\n    //     const currentRate = chartData.data[chartData.data.length-1]\n    //     const prevRate = chartData.data[chartData.data.length - 2]\n    //     if (currentRate>prevRate) setDidGrow(true)\n    // }\n    const [expanded, setExpanded] = useState(false)\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n    useEffect(() => {\n        if (!currency.Cur_Statistics) {\n            fetch(`https://www.nbrb.by/API/ExRates/Rates/Dynamics/${currency.Cur_ID}?startDate=${startDate}&endDate=${endDate}`)\n            .then(responseStat => responseStat.json())\n            .then(dataStat => {\n                dispatch(setStatistics(dataStat))\n                setIsStatLoaded(true)\n            })}\n        \n    }, [dispatch, startDate, endDate, currency.Cur_ID])\n\n\n\n    if (isStatLoaded && chartData.data.length===0) {\n        currency.Cur_Statistics.map(day => {\n            chartData.labels.push(day.Date.slice(5, 10))\n            return chartData.data.push(day.Cur_OfficialRate)\n        })\n    }\n\n    return (\n        <>\n            <Grid item>\n                <Card>\n                    <CardHeader\n                        avatar={\n                            <Avatar>{currency.Cur_Abbreviation}</Avatar>\n                        }\n                        title={`Валюта: ${currency.Cur_Name}`}\n                        subheader={`Текущий курс: ${currency.Cur_OfficialRate}`} \n                        action={\n                            <ExpandChart\n                                expand={expanded}\n                                onClick={handleExpandClick}\n                                aria-expanded={expanded}\n                                aria-label=\"show more\"\n                            >\n                                <ExpandMore />\n                            </ExpandChart>\n                        }\n                    />\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                        <CardMedia>\n                            <LineChart\n                                labels={currency.Cur_Statistics && currency.Cur_Statistics.map(day=> day.Date.slice(5,10))}\n                                data={currency.Cur_Statistics && currency.Cur_Statistics.map(day=> day.Cur_OfficialRate)}\n                                label={currency.Cur_Abbreviation} />\n                        </CardMedia>\n                    </Collapse>\n                </Card>\n            </Grid>\n\n        </>\n    )\n}","import {  Grid } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { setData } from '../../features/currencies/currenciesSlice';\nimport { Currency } from '../currency/Currency';\n\nconst currIDList = [\n    451,      //? Евро\n    431,      //? Доллар США\n    456,      //? Российский рубль\n    // 468,      //? Тайский бат\n    460,      //? Турецкая лира\n    426,      //? Швейцарский франк\n    429,      //? Фунт стерлингов\n    449,      //? Гривна\n    // 'https://blockchain.info/ticker',                 //? Bitcoin\n];\n\nexport const CurrencyList = () => {\n    const [dates, setDates] = useState([])\n    const data = useSelector(state => state.currencies.data)\n    const dispatch = useDispatch()\n\n    const getDates = (spread) => {\n        const today = new Date()\n        const firstStatDay = new Date()\n        firstStatDay.setDate(today.getDate() - spread)\n        return [`${firstStatDay.toJSON().slice(0, 10)}`, `${today.toJSON().slice(0, 10)}`]\n    }\n\n    useEffect(() => {\n        document.title='Exchange rates'\n        if (data.length===0) {\n            setDates(getDates(45))\n            currIDList.map(async (Cur_ID) => {\n                fetch(`https://www.nbrb.by/api/exrates/rates/${Cur_ID}`)\n                .then(responseCur => responseCur.json())\n                .then(dataCur => dispatch(setData(dataCur)))\n                \n            })\n        }\n        \n    }, [dispatch])\n\n\n    return (\n        <Box sx={{padding: '1.5vh 0'}}>\n        <Grid container spacing={1.5} direction=\"column\" >\n            {data.map(currency => <Currency\n                currency={currency}\n                startDate={dates[0]}\n                endDate={dates[1]}\n                key={currency.Cur_ID}\n            />)}\n        </Grid>\n</Box>\n    )\n}\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport { Menu } from '@material-ui/icons';\n\nexport default function TopBar() {\n   const [title, setTitle] = React.useState()\n   React.useEffect(() => {\n      setTitle(document.title)\n   },[document.title])\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <Menu/>\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {title}\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","import React from \"react\"\nimport { BottomNavigation, BottomNavigationAction, Icon } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useState } from \"react\"\nimport { BrowserRouter, Link, Switch,Route, NavLink} from \"react-router-dom\"\nimport { CurrencyList } from \"../currencyList/currencyList\"\nimport TopBar from '../appBar/AppBar'\n    \nexport const BottomNavigationComponent = () => {\n    const [value, setValue] = useState('rates')\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n    return (\n        <>\n            <Box sx={{ position: \"fixed\", bottom: 0, left: 0, width: \"100%\" }}>\n                <BottomNavigation value={value} onChange={handleChange} >\n                    <BottomNavigationAction\n                        label=\"Rates\"\n                        value=\"rates\"\n                        icon={<Icon>trending_up</Icon>}\n                        component={NavLink}\n                        href='/savings'\n                        to='/'\n                    />\n                    <BottomNavigationAction\n                        label=\"Savings\"\n                        value=\"savings\"\n                        icon={<Icon>savings</Icon>}\n                        component={NavLink}\n                        to='/savings'\n                        href='/savings'\n                    />\n                    <BottomNavigationAction\n                        label=\"Converter\"\n                        value=\"converter\"\n                        icon={<Icon>loop</Icon>}\n                        component={NavLink}\n                        href='/savings'\n                        to='/converter'\n                    />\n                </BottomNavigation>\n            </Box>\n        </>\n    )\n}","import { Typography } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\n\nexport default function () {\n   useEffect(() => {\n      document.title='Curremcy converter'\n   })\n   return (<>\n      <Typography variant=\"h2\" component=\"div\">It's going to be currency converter here.</Typography>\n   </>)\n}","import { Typography } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\n\nexport default function Savings() {\n   useEffect(() => {\n      document.title = 'Monitor your savings'\n   }, [])\n   return (<>\n      <Typography variant=\"h2\" component=\"div\">Coming soon! Monitor your savings here.</Typography>\n   </>)\n}","import React from 'react';\n// import { Router } from 'react-router';\nimport { CurrencyList } from './components/currencyList/currencyList';\nimport { BottomNavigationComponent } from './components/bottomNavigation/BottomNavigation';\nimport { Container, useMediaQuery, createTheme, ThemeProvider, CssBaseline, Button } from '@mui/material';\nimport './App.css';\nimport TopBar from './components/appBar/AppBar';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, useLocation, useRouteMatch\n} from \"react-router-dom\";\nimport Converter from './components/converter/Converter';\nimport Savings from './components/savings/Savings';\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth=\"sm\" sx={{padding:'9vh 1rem'}}>\n          <TopBar />\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/users\">\n              <Users />\n            </Route>\n            <Route path='/savings'>\n              <Savings/>\n            </Route>\n            <Route path='/converter'>\n              <Converter/>\n            </Route>\n            <Route exact path=\"/\">\n              <CurrencyList />\n            </Route>\n            </Switch>\n          <BottomNavigationComponent />\n        </Container>\n      </ThemeProvider>\n    </Router>\n\n  );\n}\n\nexport default App;\n\n\n","import { configureStore } from '@reduxjs/toolkit'\nimport currenciesSlice from '../features/currencies/currenciesSlice'\n\nexport default configureStore({\n    reducer: {\n        currencies: currenciesSlice\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}