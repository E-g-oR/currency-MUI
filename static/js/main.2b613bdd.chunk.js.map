{"version":3,"sources":["app/features/store/authStore/authStore.ts","app/features/store/ratesStore/ratesStore.ts","app/features/store/savingsStore/savingsStore.ts","app/store.ts","app/features/store/index.ts","components/UI/appBar/AppBar.tsx","components/UI/bottomNavigation/BottomNavigation.jsx","components/Screens/ConverterScreen/converter/Converter.jsx","components/Screens/RatesScreen/lineChart/LineChart.jsx","components/Screens/RatesScreen/currency/Currency.tsx","components/Screens/RatesScreen/currencyList/currencyList.tsx","components/Screens/SavingsScreen/savings/NumberFormatCustom.tsx","components/Screens/SavingsScreen/savings/FormAddSavings.tsx","components/Screens/SavingsScreen/savings/Converted.tsx","components/Screens/SavingsScreen/savings/SavingsList.tsx","components/Screens/SavingsScreen/savings/Savings.tsx","components/Screens/Base/Base.tsx","components/Screens/LoginAndRegisterScreen/LoginForm.tsx","components/Screens/LoginAndRegisterScreen/RegisterForm.tsx","components/Screens/LoginAndRegisterScreen/LoginBase.tsx","app/features/auth/firebaseConfig.ts","App.tsx","index.js"],"names":["AuthStore","indexStore","auth","makeAutoObservable","this","CURRENCY_ID_LIST","sendRequest","url","a","fetch","response","json","RatesStore","data","startDate","today","dates","spread","Date","firstStatDay","setDate","getDate","toJSON","slice","getDates","forEach","id","rate","putRate","getRateStatistics","Cur_ID","statAndChart","Cur_Statistics","Chart_Data","push","convertStatToChart","stat","chartData","labels","map","day","Cur_OfficialRate","savingsStore","savings","converted","date","error","checkForRates","length","getFromDB","saving","value","Number","index","findIndex","save","name","saveToDB","convertToBYN","localStorage","setItem","JSON","stringify","savingsAtDB","getItem","parse","addSaving","result","rates","elem","Cur_Abbreviation","scale","Cur_Scale","store","authStore","fetchData","TopBar","observer","history","useHistory","React","title","Box","sx","flexGrow","AppBar","Toolbar","IconButton","size","edge","color","mr","Menu","Typography","variant","component","Button","onClick","getAuth","signOut","BottomNavigationComponent","useState","setValue","position","bottom","left","width","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","Icon","NavLink","to","Converter","useEffect","document","LineChart","datasets","fill","backgroundColor","borderColor","borderWidth","ExpandChart","styled","props","expand","other","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Currency","endDate","expanded","setExpanded","Card","CardHeader","avatar","Avatar","Cur_Name","subheader","action","ExpandMore","Collapse","in","timeout","unmountOnExit","CardMedia","textAlign","CurrencyList","Currencies","initRatesStore","padding","Stack","direction","spacing","display","justifyContent","CircularProgress","NumberFormatCustom","forwardRef","ref","prefix","getInputRef","onValueChange","values","target","thousandSeparator","isNumericString","AddSavingsDialog","onClose","open","mode","savingObj","RateError","setRateError","useForm","defaultValues","reset","errors","formState","handleSubmit","control","Dialog","DialogTitle","onSubmit","DialogContent","FormControl","rules","required","message","render","field","TextField","helperText","margin","autoComplete","InputProps","inputComponent","InputLabel","Select","labelId","MenuItem","DialogActions","type","Converted","convertedError","setconvertedError","toFixed","SavingsList","flexWrap","paddingBottom","Chip","console","log","handleChipClick","Savings","setOpen","resetFunc","Fab","right","Add","Base","Container","maxWidth","path","LoginForm","goTo","handleLogin","signInWithEmailAndPassword","login","password","then","userCred","user","catch","code","useLoginForm","mt","mb","minLength","maxLength","Link","cursor","RegisterForm","LoginBase","className","CardContent","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","initializeApp","onAuthStateChanged","prefersDarkMode","useMediaQuery","useMemo","createTheme","palette","ThemeProvider","CssBaseline","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b613bdd.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { Store } from \"..\";\n\ninterface IAuth {}\ninterface IAuthFirebase {\n  accessToken: string;\n  auth: object;\n  displayName: string | null;\n  email: string;\n  photoURL: string | null;\n  uid: string;\n}\nexport class AuthStore {\n  indexStore;\n  auth: IAuthFirebase | null = null;\n\n  constructor(indexStore: Store) {\n    makeAutoObservable(this);\n    this.indexStore = indexStore;\n  }\n\n  setAuth(auth: IAuthFirebase | null) {\n    this.auth = auth;\n  }\n}\n","import { makeAutoObservable } from \"mobx\";\nimport { Store } from \"..\";\nimport { IChartData } from \"../../../../components/Screens/RatesScreen/currency/Currency\";\n\nconst CURRENCY_ID_LIST = [\n  451, //? Евро\n  431, //? Доллар США\n  456, //? Российский рубль\n  468, //? Тайский бат\n  460, //? Турецкая лира\n  426, //? Швейцарский франк\n  429, //? Фунт стерлингов\n  449, //? Гривна\n  // 'https://blockchain.info/ticker',                 //? Bitcoin\n];\n\nconst sendRequest = async (url: string) => {\n  const response = await fetch(url);\n  return await response.json();\n};\n\nconst getDates = (spread: number) => {\n  const today = new Date();\n  const firstStatDay = new Date();\n  firstStatDay.setDate(today.getDate() - spread);\n  return [\n    `${firstStatDay.toJSON().slice(0, 10)}`,\n    `${today.toJSON().slice(0, 10)}`,\n  ];\n};\n\nexport interface IStatistics {\n  Cur_ID: number;\n  Date: string;\n  Cur_OfficialRate: number;\n}\n\nexport interface IRate {\n  Cur_ID: number;\n  Date: string;\n  Cur_Abbreviation: string;\n  Cur_Scale: number;\n  Cur_Name: string;\n  Cur_OfficialRate: number;\n  Cur_Statistics: IStatistics[];\n  Chart_Data: IChartData;\n}\n\nexport class RatesStore {\n  indexStore: Store;\n  data: IRate[] = [];\n  startDate: string;\n  today: string;\n\n  constructor(indexStore: Store) {\n    makeAutoObservable(this);\n    const dates = getDates(40);\n    this.startDate = dates[0];\n    this.today = dates[1];\n    this.indexStore = indexStore;\n  }\n\n  fetchData() {\n    CURRENCY_ID_LIST.forEach(async (id: number) => {\n      const rate: IRate = await sendRequest(\n        `https://www.nbrb.by/api/exrates/rates/${id}`\n      );\n      this.putRate(rate);\n    });\n  }\n\n  async putRate(rate: IRate) {\n    const statAndChart = await this.getRateStatistics(rate.Cur_ID);\n    rate.Cur_Statistics = statAndChart.Cur_Statistics;\n    rate.Chart_Data = statAndChart.Chart_Data;\n    this.data.push(rate);\n  }\n\n  async getRateStatistics(id: number) {\n    const Cur_Statistics: IStatistics[] = await sendRequest(\n      `https://www.nbrb.by/API/ExRates/Rates/Dynamics/${id}?startDate=${this.startDate}&endDate=${this.today}`\n    );\n    \n    const Chart_Data = this.convertStatToChart(Cur_Statistics);\n    return { Cur_Statistics, Chart_Data };\n  }\n\n  convertStatToChart(stat: IStatistics[]): IChartData {\n    const chartData: IChartData = {\n      labels: [],\n      data: [],\n    };\n    stat.map(day => {\n      day.Date = day.Date.slice(5, 10)\n      chartData.labels.push(day.Date);\n      chartData.data.push(day.Cur_OfficialRate);\n    })\n    return chartData;\n  }\n\n}\n","import { makeAutoObservable } from \"mobx\";\nimport { Store } from \"..\";\nimport { IRate } from \"../ratesStore/ratesStore\";\n\nexport interface ISaving {\n  name: string;\n  value: number;\n  rate: number;\n  scale: number;\n}\n\n\nexport const findRate = (data: IRate[], Cur_Abbreviation: string): number => {\n  let rate = 0;\n  const index = data.findIndex(\n    (rate) => rate.Cur_Abbreviation === Cur_Abbreviation\n  );\n  if (index !== -1) {\n    rate = data[index].Cur_OfficialRate;\n  }\n  return rate;\n};\n\nexport class savingsStore {\n  indexStore: Store;\n  savings: ISaving[] = [];\n  converted: number = 0;\n  date: string;\n  error: boolean = false;\n\n  constructor(indexStore: Store) {\n    makeAutoObservable(this);\n    this.indexStore = indexStore;\n    this.error = this.checkForRates();\n    this.date = indexStore.RatesStore.today;\n    this.getFromDB();\n  }\n\n  checkForRates = () => !!this.indexStore.RatesStore.data.length;\n\n  addSaving(saving: ISaving) {\n    saving.value = Number(saving.value);\n    const index = this.savings.findIndex((save) => save.name === saving.name);\n    if (index === -1) {\n      this.savings.push(saving);\n    } else this.savings[index].value += saving.value;\n\n    this.saveToDB();\n  }\n\n  saveToDB() {\n    this.convertToBYN();\n    localStorage.setItem(\"savings\", JSON.stringify(this.savings));\n  }\n\n  getFromDB() {\n    const savingsAtDB = localStorage.getItem(\"savings\");\n    if (savingsAtDB) {\n      const S: ISaving[] = JSON.parse(savingsAtDB);\n      S.forEach((save) => this.addSaving(save));\n    }\n    this.convertToBYN();\n  }\n\n  convertToBYN() {\n    let result: number = 0;\n    const rates = this.indexStore.RatesStore.data;\n    this.savings.forEach((elem) => {\n      const index = rates.findIndex(\n        (rate) => rate.Cur_Abbreviation === elem.name\n      );\n      if (index !== -1) {\n        const rate = rates[index];\n        elem.rate = rate.Cur_OfficialRate;\n        elem.scale = rate.Cur_Scale;\n        result += (elem.value * elem.rate) / elem.scale;\n      }\n    });\n    this.converted = result;\n  }\n}\n","import { Store } from './features/store'\n\nconst store = new Store();\n\nexport default store;","import { makeAutoObservable } from \"mobx\";\nimport { AuthStore } from \"./authStore/authStore\";\nimport { RatesStore } from \"./ratesStore/ratesStore\";\nimport { savingsStore } from \"./savingsStore/savingsStore\";\n\nexport class Store {\n  RatesStore;\n  savingsStore;\n  authStore;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.RatesStore = new RatesStore(this);\n    this.savingsStore = new savingsStore(this);\n    this.authStore = new AuthStore(this);\n  }\n\n  initRatesStore() {\n    this.RatesStore.fetchData();\n  }\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport { Menu } from '@material-ui/icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Auth, getAuth } from '@firebase/auth';\nimport { signOut } from 'firebase/auth';\nimport { observer } from 'mobx-react';\nimport { AuthStore } from '../../../app/features/store/authStore/authStore';\n\nconst TopBar: React.FC<{ authStore: AuthStore }> = observer(({ authStore }) => {\n  const auth = authStore.auth;\n\n  const history = useHistory();\n  const [title, setTitle] = React.useState('')\n\n  const handleLoginClick = () => {\n    history.push('/login');\n  }\n\n  const handleLogoutClick = () => {\n    const a = getAuth();\n    signOut(a);\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar >\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {title}\n          </Typography>\n          {(auth) ?\n            <Button color=\"inherit\" onClick={handleLoginClick} >\n              Login\n            </Button>\n            : <Button color=\"inherit\" onClick={handleLogoutClick} >\n              Log out\n            </Button>\n          }\n\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}) \n\nexport default TopBar;","import React from \"react\"\nimport { BottomNavigation, BottomNavigationAction, Icon } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useState } from \"react\"\nimport { NavLink} from \"react-router-dom\"\n    \nexport const BottomNavigationComponent = () => {\n    const [value, setValue] = useState('rates')\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n    return (\n        <>\n            <Box sx={{ position: \"fixed\", bottom: 0, left: 0, width: \"100%\" }}>\n                <BottomNavigation value={value} onChange={handleChange} >\n                    <BottomNavigationAction\n                        label=\"Rates\"\n                        value=\"rates\"\n                        icon={<Icon>trending_up</Icon>}\n                        component={NavLink}\n                        to='/currency-MUI-pages/rates'\n                    />\n                    <BottomNavigationAction\n                        label=\"Savings\"\n                        value=\"savings\"\n                        icon={<Icon>savings</Icon>}\n                        component={NavLink}\n                        to='/currency-MUI-pages/savings'\n                    />\n                    <BottomNavigationAction\n                        label=\"Converter\"\n                        value=\"converter\"\n                        icon={<Icon>loop</Icon>}\n                        component={NavLink}\n                        to='/currency-MUI-pages/converter'\n                    />\n                </BottomNavigation>\n            </Box>\n        </>\n    )\n}","import React, { useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nconst Converter = () => {\n   \n   useEffect(() => {\n      document.title = 'Curremcy converter'\n   });\n\n   return (<>\n      <Typography variant=\"h4\" component=\"div\">It's going to be currency converter here.</Typography>\n   </>)\n}\nexport default Converter;","import { Line } from 'react-chartjs-2'\n\nexport const LineChart = ({ labels, data, label }) => {\n    return (<>\n        <Line\n            data={{\n                labels: labels,\n                datasets: [{\n                    label: label,\n                    data: data,\n                    fill: 'origin',      // 0: fill to 'origin',\n                    backgroundColor: [\n                        'rgba(0, 0, 0, 0.2)',\n                    ],\n                    borderColor: [\n                        'rgba(0, 0, 0, 1)',\n                    ],\n                    borderWidth: 1\n                }]\n            }}\n        />\n    </>)\n}","import React, { useEffect, useState } from \"react\";\nimport { LineChart } from \"../lineChart/LineChart\";\nimport { Avatar, Card, CardHeader, CardMedia, Collapse, IconButton, IconButtonProps, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\";\nimport { ExpandMore } from \"@material-ui/icons\"\nimport { IRate } from \"../../../../app/features/store/ratesStore/ratesStore\";\n\nexport interface IChartData {\n  labels: string[];\n  data: number[];\n}\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\n\nconst ExpandChart = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props\n  return <IconButton {...other} />\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}))\n\nexport const Currency: React.FC<{ rate: IRate, startDate: string, endDate: string }> = ({ rate, startDate, endDate }) => {\n\n  const [expanded, setExpanded] = useState(false)\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  useEffect(() => {\n\n  }, [startDate, endDate, rate.Cur_ID])\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader\n          avatar={\n            <Avatar>{rate.Cur_Abbreviation}</Avatar>\n          }\n          title={`За ${rate.Cur_Scale} ${rate.Cur_Name}`}\n          subheader={`Текущий курс: ${rate.Cur_OfficialRate}`}\n          action={\n            <ExpandChart\n              expand={expanded}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMore />\n            </ExpandChart>\n          }\n        />\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardMedia>\n            {(rate.Chart_Data.labels.length && rate.Chart_Data.data.length) ?\n              <LineChart\n                labels={rate.Chart_Data && rate.Chart_Data.labels}\n                data={rate.Chart_Data && rate.Chart_Data.data}\n                label={rate.Cur_Abbreviation}\n              />\n              : <Typography  textAlign='center' >There is no valid data for chart.</Typography>\n            }\n\n          </CardMedia>\n        </Collapse>\n      </Card>\n    </>\n  )\n}","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport { Store } from '../../../../app/features/store';\nimport { IRate } from '../../../../app/features/store/ratesStore/ratesStore';\n\nimport { Currency } from '../currency/Currency';\n\nimport { CircularProgress, Stack } from '@mui/material';\nimport { Box } from '@mui/system';\n\n\nexport const CurrencyList: React.FC<{ store: Store }> = observer(({ store }) => {\n\n    const Currencies = store.RatesStore.data;\n\n    useEffect(() => {\n        if (!Currencies.length) {\n            store.initRatesStore();\n        }\n    }, [store, Currencies]);\n\n    return (\n        <Box sx={{ padding: '1.5vh 3%' }}>\n            <Stack direction='column' spacing={2} >\n                {Currencies.length ?\n                    Currencies.map((rate: IRate) => <Currency\n                        key={rate.Cur_ID}\n                        rate={rate}\n                        startDate={'2021-07-05'}\n                        endDate={'2021-10-29'}\n                    />)\n                    : <Box sx={{ display: 'flex', justifyContent: 'center' }}> <CircularProgress /> </Box>}\n            </Stack>\n        </Box>\n    )\n})","import React from \"react\";\nimport NumberFormat from \"react-number-format\";\n\ninterface CustomProps {\n   onChange: (event: { target: { name: string; value: string } }) => void;\n   prefix: string;\n   name: string;\n}\n\nconst NumberFormatCustom = React.forwardRef<NumberFormat, CustomProps>(\n   function NumberFormatCustom(props, ref) {\n      const { onChange, prefix, ...other } = props;\n\n      return (\n         <NumberFormat\n            {...other}\n            getInputRef={ref}\n            onValueChange={(values) => {\n               onChange({\n                  target: {\n                     name: props.name,\n                     value: values.value\n                  }\n               });\n            }}\n            thousandSeparator\n            isNumericString\n            prefix=''\n         />\n      );\n   }\n);\n\nexport default NumberFormatCustom","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\nimport { ISaving } from \"../../../../app/features/store/savingsStore/savingsStore\";\nimport { IForm } from \"./Savings\";\nimport NumberFormatCustom from \"./NumberFormatCustom\";\nimport {\n   Button,\n   Dialog,\n   DialogActions,\n   DialogContent,\n   DialogTitle,\n   FormControl,\n   InputLabel,\n   MenuItem,\n   Select,\n   Stack,\n   TextField,\n   Typography\n} from \"@mui/material\";\n\nconst AddSavingsDialog: React.FC<IForm> = observer(({ onClose, open, mode, savingObj, store }) => {\n\n   const [RateError, setRateError] = useState<string | null>(null);\n\n   const { reset, formState: { errors }, handleSubmit, control } = useForm<ISaving>({\n      defaultValues: {\n         name: '',\n         value: 0,\n      },\n      mode: \"onChange\"\n   })\n\n   const submitForm: SubmitHandler<ISaving> = (data: ISaving) => {\n      store.savingsStore.addSaving(data);\n      setRateError(null);\n      onClose(reset);\n   };\n\n   return (\n      <>\n         <Dialog open={open}>\n            <DialogTitle>{mode === 'edit' ? `Edit ${savingObj && savingObj.name} saving` : 'Add Savings'}</DialogTitle>\n            <form onSubmit={handleSubmit(submitForm)}>\n               <DialogContent >\n                  <Stack direction=\"row\">\n                     <FormControl >\n                        <Controller\n                           name='value'\n                           control={control}\n                           rules={{ required: { value: true, message: 'Please fill this' } }}\n                           render={({ field }) => <TextField\n                              {...field}\n                              error={!!errors.value}\n                              helperText={errors.value ? errors.value.message : null}\n                              margin='normal'\n                              label='Amount'\n                              autoComplete='off'\n                              InputProps={{\n                                 inputComponent: NumberFormatCustom as any,\n                              }}\n                              variant='standard'\n                           />}\n                        />\n                     </FormControl>\n                     <FormControl margin='normal' sx={{ width: '150px' }}>\n                        <Controller\n                           name=\"name\"\n                           control={control}\n                           rules={{ required: true }}\n                           render={({ field }) => <>\n                              <InputLabel id=\"demo-simple-select-label\" error={!!errors.name}>Currency</InputLabel>\n                              <Select\n                                 {...field}\n                                 labelId=\"currency-select-label\"\n                                 id=\"currency-select\"\n                                 error={!!errors.name}\n                                 label=\"Currency\"\n                                 variant='standard'\n                              >\n                                 <MenuItem value='USD'>$</MenuItem>\n                                 <MenuItem value='EUR'>€</MenuItem>\n                                 <MenuItem value='RUB'>₽</MenuItem>\n                                 <MenuItem value='GBP'>£</MenuItem>\n                                 <MenuItem value='BTC'>₿</MenuItem>\n                                 <MenuItem value='TRY'>₤</MenuItem>\n                              </Select>\n                           </>}\n                        />\n                     </FormControl>\n                  </Stack>\n                  {RateError ? <Typography color='red'>{RateError}</Typography> : null}\n               </DialogContent >\n               <DialogActions>\n                  <Button variant='contained' type=\"submit\">Confirm</Button>\n                  <Button onClick={() => { onClose(reset) }} type=\"reset\">Cansel</Button>\n               </DialogActions>\n            </form>\n         </Dialog >\n      </>\n   );\n})\nexport default AddSavingsDialog","import React, { useEffect, useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { Store } from '../../../../app/features/store';\n\nconst Converted: React.FC<{ store: Store }> = observer(({ store }) => {\n  const converted = store.savingsStore.converted;\n  const [convertedError, setconvertedError] = useState('');\n\n  useEffect(() => {\n    if (!store.RatesStore.data.length) {\n      setconvertedError(\"You probably need to load rates first\");\n    } else {\n      store.savingsStore.convertToBYN();\n    }\n  }, [])\n\n  return (\n    <Typography variant=\"h4\" textAlign=\"center\">{convertedError ? convertedError : converted.toFixed(2)}</Typography>\n  )\n})\n\nexport default Converted;\n","import React from \"react\";\nimport store from \"../../../../app/store\";\nimport { ISaving } from \"../../../../app/features/store/savingsStore/savingsStore\";\n\nimport Converted from \"./Converted\";\nimport { Chip, Stack } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { observer } from \"mobx-react\";\n\nconst SavingsList: React.FC<{savings: ISaving[]}> = observer(({savings}) => {\n\n   const handleChipClick = (saving: ISaving) => {\n      console.log(`value: ${saving.value}, name: ${saving.name}`);\n   }\n\n   return (<>\n      <Box sx={{ padding: '1.5rem 0' }}>\n         <Stack direction=\"row\" spacing={2} justifyContent=\"space-evenly\" sx={{ flexWrap: \"wrap\", paddingBottom: '1rem' }}>\n            {savings.length ? savings.map(saving => <Chip\n               key={saving.name}\n               variant=\"outlined\"\n               color=\"primary\"\n               label={`${saving.value} ${saving.name}`}\n               onClick={() => handleChipClick(saving)}\n            />) : null}\n         </Stack>\n         <Converted store={ store}/>\n      </Box>\n   </>)\n}) \n\nexport default SavingsList","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { UseFormReset } from \"react-hook-form\";\nimport { Store } from \"../../../../app/features/store\";\nimport { ISaving } from \"../../../../app/features/store/savingsStore/savingsStore\";\n\nimport AddSavingsDialog from \"./FormAddSavings\";\nimport SavingsList from \"./SavingsList\";\nimport { Fab } from \"@mui/material\";\n\nimport { Add } from \"@material-ui/icons\";\n\n\nexport interface IForm {\n   onClose: (func: UseFormReset<ISaving>) => void;\n   open: boolean;\n   mode?: 'edit';\n   savingObj?: ISaving;\n   store: Store;\n}\n\nconst Savings: React.FC<{ store: Store }> = observer(({ store }) => {\n\n   const Savings = store.savingsStore.savings;\n   const [open, setOpen] = useState(false);\n\n   const handleClickOpen = () => {\n      setOpen(true);\n   }\n\n   const handleClose = (resetFunc: UseFormReset<ISaving>) => {\n      setOpen(false);\n      resetFunc();\n   }\n\n   return (\n      <>\n         <SavingsList savings={Savings} />\n         <AddSavingsDialog onClose={handleClose} open={open} store={store} />\n         <Fab\n            sx={{ margin: \"auto 10px 10px auto\", position: \"fixed\", right: '1.5rem', bottom: '5rem' }}\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={() => handleClickOpen()}\n         >\n            <Add />\n         </Fab>\n      </>\n   );\n})\n\nexport default Savings;\n","import { Container } from '@mui/material'\nimport React from 'react'\nimport { Route, Switch, useHistory } from 'react-router'\nimport store from '../../../app/store'\nimport TopBar from '../../UI/appBar/AppBar'\nimport { BottomNavigationComponent } from '../../UI/bottomNavigation/BottomNavigation'\nimport Converter from '../ConverterScreen/converter/Converter'\nimport LoginBase from '../LoginAndRegisterScreen/LoginBase'\nimport { CurrencyList } from '../RatesScreen/currencyList/currencyList'\nimport Savings from '../SavingsScreen/savings/Savings';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nconst Base = () => {\n  return (\n    <div>\n      <TopBar authStore={store.authStore} />\n\n      <Container maxWidth=\"sm\" sx={{ padding: '4rem 0' }} >\n        <Switch>\n          <Route path=\"/currency-MUI-pages/savings\"> <Savings store={store} /> </Route>\n          <Route path=\"/currency-MUI-pages/converter\"> <Converter /> </Route>\n          <Route path=\"/currency-MUI-pages/rates\"> <CurrencyList store={store} /> </Route>\n        </Switch>\n      </Container>\n\n      <BottomNavigationComponent />\n    </div>\n  )\n}\n\nexport default Base\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Button, FormControl, Link, Stack, TextField, Typography } from '@mui/material';\nimport { Controller, useForm } from 'react-hook-form';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport firebaseConfig from '../../../app/features/auth/firebaseConfig';\nimport { initializeApp } from '@firebase/app';\n\ninterface IFormLogin {\n  login: string,\n  password: string,\n}\n\nconst useLoginForm = () => {\n\n  const history = useHistory();\n  \n  const auth = getAuth();\n\n\n  const goTo = (url: string) => {\n    history.push(url);\n  }\n\n\n  const handleLogin = (data: IFormLogin) => {\n    signInWithEmailAndPassword(auth, data.login, data.password)\n      .then((userCred) => {\n        const user = userCred.user;\n        console.log(user);\n        \n        goTo('/currency-MUI-pages/rates');\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      })\n  }\n\n  return { goTo, handleLogin }\n}\n\nconst LoginForm = () => {\n\n  const { goTo, handleLogin } = useLoginForm();\n\n  const { reset, formState: { errors }, handleSubmit, control } = useForm<IFormLogin>({\n    defaultValues: {\n      login: '',\n      password: '',\n    },\n    mode: \"onChange\"\n  })\n\n  return (\n    <div>\n      <Typography variant=\"h4\" >\n        Login\n      </Typography>\n      <Stack mt={3} mb={3} direction=\"column\" spacing={2}>\n\n        <FormControl>\n          <Controller\n            name=\"login\"\n            control={control}\n            rules={{\n              required: { value: true, message: 'Can not be empty' },\n              minLength: { value: 5, message: 'Can not be shorter 5 symbols' },\n            }}\n            render={({ field }) => <TextField\n              {...field}\n              error={!!errors.login}\n              helperText={errors.login ? errors.login.message : null}\n              type=\"email\"\n              id=\"login\"\n              label=\"Login\"\n              variant=\"filled\"\n            />}\n          />\n        </FormControl>\n\n        <FormControl>\n          <Controller\n            name=\"password\"\n            control={control}\n            rules={{\n              required: { value: true, message: 'Can not be empty' },\n              minLength: { value: 5, message: 'Can not be shorter 5 symbols' },\n              maxLength: { value: 14, message: 'Can not be longer 14 symbols' },\n            }}\n            render={({ field }) => <TextField\n              {...field}\n              error={!!errors.password}\n              helperText={errors.password ? errors.password.message : null}\n              type=\"password\"\n              id=\"password\"\n              label=\"Password\"\n              variant=\"filled\"\n            />}\n          />\n        </FormControl>\n\n      </Stack>\n\n      <Stack mt={2} direction=\"column\" spacing={2}>\n        <Button variant=\"contained\" onClick={handleSubmit(handleLogin)} >Log in</Button>\n        <Typography>\n          Don't have and account?\n\n          <Link sx={{ cursor: 'pointer' }}\n            onClick={() => goTo('/register')} >\n            Register\n          </Link>\n\n        </Typography>\n      </Stack>\n\n    </div>\n  )\n}\n\nexport default LoginForm\n","import { Button, Link, Stack, TextField, Typography } from '@mui/material'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst RegisterForm = () => {\n  const history = useHistory();\n  const goToLoginPage = () => {\n    history.push('/login');\n  }\n  return (\n    <div>\n      <Typography variant=\"h4\" >\n        Register\n      </Typography>\n      <Stack mt={3} mb={3} direction=\"column\" spacing={2}>\n        <TextField id=\"login\" label=\"Login\" variant=\"filled\" />\n        <TextField type=\"password\" id=\"password\" label=\"Password\" variant=\"filled\" />\n        <TextField type=\"password\" id=\"password-repeat\" label=\"Repeat password\" variant=\"filled\" />\n      </Stack>\n\n      <Stack mt={2} direction=\"column\" spacing={2}>\n        <Button variant=\"contained\" >Register</Button>\n        <Typography>Already registered? <Link sx={{ cursor: 'pointer' }} onClick={goToLoginPage} >Sign in</Link> </Typography>\n      </Stack>\n    </div>\n  )\n}\n\nexport default RegisterForm\n","import { Card, CardContent, Typography } from '@mui/material'\nimport { url } from 'inspector'\nimport React from 'react'\nimport { Route, Switch } from 'react-router'\nimport LoginForm from './LoginForm'\nimport RegisterForm from './RegisterForm'\nimport \"./LoginBase.scss\"\n\nconst LoginBase = () => {\n  return (\n    <div className=\"login-wrapper\">\n      <Card sx={{ width: '100%', maxWidth: '400px' }}>\n        <CardContent>\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/register\" component={RegisterForm} />\n          </Switch>\n        </CardContent>\n\n      </Card>\n    </div>\n  )\n}\n\nexport default LoginBase\n","// import { initializeApp } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n  \nconst firebaseConfig = {\n  apiKey: \"AIzaSyAcL8bZbMgkg5UdqrwXkWfN4B6fYJL72zs\",\n  authDomain: \"vuecrm-practice.firebaseapp.com\",\n  projectId: \"vuecrm-practice\",\n  storageBucket: \"vuecrm-practice.appspot.com\",\n  messagingSenderId: \"836081542694\",\n  appId: \"1:836081542694:web:1e87a910a12bff4bb368e7\",\n  measurementId: \"G-M9DZVSZ8R5\",\n}\n// const FirebaseApp = initializeApp(firebaseConfig);\nexport default firebaseConfig;","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Store } from './app/features/store';\nimport Base from './components/Screens/Base/Base';\nimport LoginBase from './components/Screens/LoginAndRegisterScreen/LoginBase';\nimport { useMediaQuery, createTheme, ThemeProvider, CssBaseline } from '@mui/material';\nimport './App.css';\nimport firebaseConfig from './app/features/auth/firebaseConfig';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\nimport { useHistory } from 'react-router';\n\nconst App: React.FC<{ store: Store }> = observer(({ store }) => {\n  const history = useHistory();\n  const app = initializeApp(firebaseConfig);\n\n  const auth = getAuth();\n  onAuthStateChanged(auth, (user) => {\n    if (!user) {\n      history.push('/login');\n    }\n  })\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n\n        <Route path=\"/currency-MUI-pages\" component={Base} />\n        <Route path=\"/\" component={LoginBase} />\n\n      </Switch>\n    </ThemeProvider>\n  );\n})\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './app/store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App store={store} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}